{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routes from \"./Routes\";\nimport { Navbar, Nav, NavItem, LinkContainer } from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction App(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        userHasAuthenticated = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAuthenticating = _useState4[0],\n        setIsAuthenticating = _useState4[1];\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    props.history.push(\"/login\");\n  }\n\n  return !isAuthenticating && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    bg: \"light\",\n    variant: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Algo Storm\"), isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(Navbar.Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    pullRight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Log Out\")))) : React.createElement(React.Fragment, null, React.createElement(Navbar.Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    pullRight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Signup\")), React.createElement(LinkContainer, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Login\")))))), React.createElement(Routes, {\n    appProps: {\n      isAuthenticated,\n      userHasAuthenticated\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/App.js"],"names":["React","useState","useEffect","Routes","Navbar","Nav","NavItem","LinkContainer","Auth","withRouter","App","props","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","onLoad","currentSession","e","alert","handleLogout","signOut","history","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,EAAeC,GAAf,EAAmBC,OAAnB,EAA2BC,aAA3B,QAA+C,iBAA/C;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBAC8BV,QAAQ,CAAC,KAAD,CADtC;AAAA;AAAA,QACXW,eADW;AAAA,QACMC,oBADN;;AAAA,qBAE8BZ,QAAQ,CAAC,IAAD,CAFtC;AAAA;AAAA,QAEXa,gBAFW;AAAA,QAEOC,mBAFP;;AAIlBb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,MAAf,GAAwB;AACtB,QAAI;AACF,YAAMR,IAAI,CAACS,cAAL,EAAN;AACAJ,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAHD,CAIA,OAAMK,CAAN,EAAS;AACP,UAAIA,CAAC,KAAK,iBAAV,EAA6B;AAC3BC,QAAAA,KAAK,CAACD,CAAD,CAAL;AACD;AACF;;AAEDH,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,iBAAeK,YAAf,GAA8B;AAC5B,UAAMZ,IAAI,CAACa,OAAL,EAAN;AAEAR,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAF,IAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;;AAED,SACE,CAACT,gBAAD,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEKF,eAAe,GACd,0CAEF,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEQ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CAFE,CADc,GASd,0CACF,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,CADF,CADE,CAXN,CADF,EA0BE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE;AAAER,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CAFF;AA+BD;;AAED,eAAeJ,UAAU,CAACC,GAAD,CAAzB","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Routes from \"./Routes\";\nimport {Navbar,Nav,NavItem,LinkContainer} from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\n\n\nfunction App(props) {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n    props.history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating &&\n    <div>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand>Algo Storm</Navbar.Brand>\n          {isAuthenticated\n          ? <>\n          \n          <Navbar.Collapse>\n            <Nav pullRight>\n              <NavItem onClick={handleLogout}>Log Out</NavItem>\n            </Nav>\n          </Navbar.Collapse>\n            </>\n          : <>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              <LinkContainer to=\"/signup\">\n                <NavItem>Signup</NavItem>\n              </LinkContainer>\n              <LinkContainer to=\"/login\">\n                <NavItem>Login</NavItem>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n          </>\n          }\n        </Navbar>\n      <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}