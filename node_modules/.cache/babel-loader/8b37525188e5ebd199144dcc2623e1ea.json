{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction CurrentAlgos(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentAlgos = _useState2[0],\n        setCurrentAlgos = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refresh = _useState4[0],\n        setRefresh = _useState4[1];\n\n  const handleRefresh = () => {\n    console.log(\"Calling refresh\");\n    setRefresh(!{\n      refresh\n    }.refresh);\n  };\n\n  useEffect(() => {\n    const data = {\n      \"email\": props.email\n    };\n    fetch(config.apiGateway.URL + \"/getalgos\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setCurrentAlgos(data);\n    });\n  }, [refresh, props.email]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Amount Allocated\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Profit/Loss\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"-\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, currentAlgos.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, item.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, USDFormat(item.margin)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, USDFormat(item.amount)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, USDFormat(item.pnl)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(AddAmountModal, {\n    email: props.email,\n    name: item.name,\n    refresh: handleRefresh,\n    min: 5000,\n    max: props.summary.marginfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(WithdrawAmountModal, {\n    email: props.email,\n    name: item.name,\n    refresh: handleRefresh,\n    min: 5000,\n    max: item.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(AlgoDetailsModal, {\n    name: item.name,\n    email: props.email,\n    refresh: handleRefresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))))));\n}\n\nexport default CurrentAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js"],"names":["React","useState","useEffect","Table","AddAmountModal","WithdrawAmountModal","AlgoDetailsModal","USDFormat","config","CurrentAlgos","props","currentAlgos","setCurrentAlgos","refresh","setRefresh","handleRefresh","console","log","data","email","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","map","item","key","name","margin","amount","pnl","summary","marginfree"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Table} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction CurrentAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n  const [refresh,setRefresh] = useState(false);\n\n  const handleRefresh = () => {\n    console.log(\"Calling refresh\")\n    setRefresh(!{refresh}.refresh);\n  }\n\n  useEffect(()=>{\n    const data = {\"email\":props.email}\n    fetch(config.apiGateway.URL+\"/getalgos\", {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n      .then(response=>response.json())\n      .then(data=>{\n        setCurrentAlgos(data)\n      })\n  },[refresh,props.email]);\n\n  \n  \n  return (\n    \n    <div>\n        \n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Amount Allocated</th>\n              <th>Profit/Loss</th>\n              <th>-</th>\n              <th>-</th>\n              <th>-</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{USDFormat(item.margin)}</td>\n                  <td>{USDFormat(item.amount)}</td>\n                  <td>{USDFormat(item.pnl)}</td>\n                  <td>\n                    \n                    <AddAmountModal email={props.email} name={item.name} refresh ={handleRefresh} min={5000} max={props.summary.marginfree}/>\n                  </td> \n                  <td>\n                    <WithdrawAmountModal email={props.email} name={item.name} refresh ={handleRefresh} min={5000} max={item.amount}/>\n                    \n                  </td>\n                  <td>\n                  <AlgoDetailsModal name={item.name} email={props.email} refresh ={handleRefresh} />\n                  </td>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default CurrentAlgos;\n"]},"metadata":{},"sourceType":"module"}