{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Signup.js\";\nimport React, { useState } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel, FormLabel, FormText, Container, Col, Row } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { Auth } from 'aws-amplify';\nexport default function Signup(props) {\n  const _useFormFields = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        newUser = _useState2[0],\n        setNewUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return React.createElement(\"form\", {\n      onSubmit: handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Confirmation Code\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      onChange: handleFieldChange,\n      value: fields.confirmationCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Please check your email for the code.\")), React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateConfirmationForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Verify\"));\n  }\n\n  function renderForm() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: fields.email,\n      onChange: handleFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      type: \"password\",\n      value: fields.password,\n      onChange: handleFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      type: \"password\",\n      onChange: handleFieldChange,\n      value: fields.confirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Signup\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, newUser === null ? renderForm() : renderConfirmationForm());\n}","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Signup.js"],"names":["React","useState","HelpBlock","FormGroup","FormControl","ControlLabel","FormLabel","FormText","Container","Col","Row","LoaderButton","useFormFields","Auth","Signup","props","email","password","confirmPassword","confirmationCode","fields","handleFieldChange","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","validateConfirmationForm","handleSubmit","event","preventDefault","signUp","username","e","alert","message","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","history","push","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  FormLabel,\n  FormText,\n  Container,\n  Col,\n  Row\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport {Auth} from 'aws-amplify';\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <FormLabel>Confirmation Code</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <FormText>Please check your email for the code.</FormText >\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n        <Container>\n            <Row>\n                <Col></Col>\n                <Col>\n                    <form onSubmit={handleSubmit}>\n                        <FormGroup controlId=\"email\" bsSize=\"large\">\n                        <FormLabel>Email</FormLabel>\n                        <FormControl\n                            autoFocus\n                            type=\"email\"\n                            value={fields.email}\n                            onChange={handleFieldChange}\n                        />\n                        </FormGroup>\n                        <FormGroup controlId=\"password\" bsSize=\"large\">\n                        <FormLabel>Password</FormLabel>\n                        <FormControl\n                            type=\"password\"\n                            value={fields.password}\n                            onChange={handleFieldChange}\n                        />\n                        </FormGroup>\n                        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n                        <FormLabel>Confirm Password</FormLabel>\n                        <FormControl\n                            type=\"password\"\n                            onChange={handleFieldChange}\n                            value={fields.confirmPassword}\n                        />\n                        </FormGroup>\n                        <LoaderButton\n                        block\n                        type=\"submit\"\n                        bsSize=\"large\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                        >\n                        Signup\n                        </LoaderButton>\n                    </form>\n            </Col>\n            <Col></Col>\n            </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}