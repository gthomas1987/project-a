{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgoPNLChart.js\";\nimport React, { useEffect, useState } from 'react'; //import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    let op = props.chart.map(e => {\n      let key = e.x;\n      let value = e.y;\n      console.log(\"XXXX\");\n      console.log(key);\n      console.log(value);\n      return {\n        x: new Date(key).getTime(),\n        y: value\n      };\n    });\n    setOptions({\n      xaxis: {\n        type: \"datetime\",\n        labels: {\n          format: 'dd-MM-yy HH:mm'\n        }\n      }\n    });\n    setSeries([{\n      name: \"PNL\",\n      data: op\n    }]);\n  }, [props.chart]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))));\n}\n\nexport default AlgoPNLChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgoPNLChart.js"],"names":["React","useEffect","useState","Chart","AlgoPNLChart","props","options","setOptions","series","setSeries","op","chart","map","e","key","x","value","y","console","log","Date","getTime","xaxis","type","labels","format","name","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,oBAEGH,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEnBI,OAFmB;AAAA,QAEXC,UAFW;;AAAA,qBAGCL,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGnBM,MAHmB;AAAA,QAGZC,SAHY;;AAK1BR,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIS,EAAE,GAAGL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAE;AAC1B,UAAIC,GAAG,GAAGD,CAAC,CAACE,CAAZ;AACA,UAAIC,KAAK,GAACH,CAAC,CAACI,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,aAAO;AAAED,QAAAA,CAAC,EAAE,IAAIK,IAAJ,CAASN,GAAT,EAAcO,OAAd,EAAL;AAA8BJ,QAAAA,CAAC,EAAED;AAAjC,OAAP;AACD,KAPQ,CAAT;AAQAT,IAAAA,UAAU,CAAC;AACTe,MAAAA,KAAK,EAAC;AACJC,QAAAA,IAAI,EAAE,UADF;AAEJC,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE;AADF;AAFJ;AADG,KAAD,CAAV;AASAhB,IAAAA,SAAS,CAAC,CACR;AACEiB,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,IAAI,EAAEjB;AAFR,KADQ,CAAD,CAAT;AAKD,GAvBQ,EAuBP,CAACL,KAAK,CAACM,KAAP,CAvBO,CAAT;AA2BE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD;;AAGH,eAAeJ,YAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\n//import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    let op = props.chart.map(e=>{\n      let key = e.x\n      let value=e.y\n      console.log(\"XXXX\")\n      console.log(key)\n      console.log(value)\n      return { x: new Date(key).getTime(), y: value }\n    })\n    setOptions({\n      xaxis:{\n        type: \"datetime\",\n        labels: {\n          format: 'dd-MM-yy HH:mm',\n        }\n      }\n\n      })\n    setSeries([\n      {\n        name: \"PNL\",\n        data: op\n      }])\n  },[props.chart]);\n\n\n  \n    return (\n      <div className=\"app\">\n        <div >\n          <div className=\"mixed-chart\">\n            <Chart\n              options={options}\n              series={series}\n              type=\"area\"\n              width=\"100%\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default AlgoPNLChart;\n"]},"metadata":{},"sourceType":"module"}