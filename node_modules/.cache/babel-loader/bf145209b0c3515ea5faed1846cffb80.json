{"ast":null,"code":"import _regeneratorRuntime from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Table,Container,Row}from'react-bootstrap';import AddAmountModal from'./AddAmountModal';import WithdrawAmountModal from'./WithdrawAmountModal';import AlgoDetailsModal from'./AlgoDetailsModal';import{USDFormat,ThousandsFormat}from'../libs/numberFormat';function CurrentAlgos(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentAlgos=_useState2[0],setCurrentAlgos=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),refresh=_useState4[0],setRefresh=_useState4[1];var handleRefresh=function handleRefresh(){setRefresh(!{refresh:refresh}.refresh);};useEffect(function(){fetchData();},[refresh]);var fetchData=function fetchData(){return _regeneratorRuntime.async(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"fetching algos\");fetch('http://localhost:5000/getalgos').then(function(response){return response.json();}).then(function(data){console.log(data);setCurrentAlgos(data);});case 2:case\"end\":return _context.stop();}}});};return React.createElement(\"div\",null,React.createElement(Table,{striped:true,bordered:true,hover:true},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Name\"),React.createElement(\"th\",null,\"Margin Used\"),React.createElement(\"th\",null,\"Amount Allocated\"),React.createElement(\"th\",null,\"Profit/Loss\"),React.createElement(\"th\",null,\"-\"),React.createElement(\"th\",null,\"-\"),React.createElement(\"th\",null,\"-\"))),React.createElement(\"tbody\",null,currentAlgos.map(function(item,key){return React.createElement(\"tr\",{key:key},React.createElement(\"td\",null,item.name),React.createElement(\"td\",null,USDFormat(item.margin)),React.createElement(\"td\",null,USDFormat(item.amount)),React.createElement(\"td\",null,USDFormat(item.pnl)),React.createElement(\"td\",null,React.createElement(AddAmountModal,{name:item.name,refresh:handleRefresh,min:5000,max:props.summary.marginfree})),React.createElement(\"td\",null,React.createElement(WithdrawAmountModal,{name:item.name,refresh:handleRefresh,min:5000,max:item.amount})),React.createElement(\"td\",null,React.createElement(AlgoDetailsModal,{name:item.name,refresh:handleRefresh})));}))));}export default CurrentAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js"],"names":["React","useState","useEffect","Table","Container","Row","AddAmountModal","WithdrawAmountModal","AlgoDetailsModal","USDFormat","ThousandsFormat","CurrentAlgos","props","currentAlgos","setCurrentAlgos","refresh","setRefresh","handleRefresh","fetchData","console","log","fetch","then","response","json","data","map","item","key","name","margin","amount","pnl","summary","marginfree"],"mappings":"iQAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,KAAR,CAAcC,SAAd,CAAwBC,GAAxB,KAAkC,iBAAlC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,SAAT,CAAmBC,eAAnB,KAA0C,sBAA1C,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,eACYX,QAAQ,CAAC,EAAD,CADpB,wCACpBY,YADoB,eACPC,eADO,8BAEEb,QAAQ,CAAC,KAAD,CAFV,yCAEpBc,OAFoB,eAEZC,UAFY,eAI3B,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BD,UAAU,CAAC,CAAC,CAACD,OAAO,CAAPA,OAAD,EAAUA,OAAZ,CAAV,CACD,CAFD,CAIAb,SAAS,CAAC,UAAI,CACZgB,SAAS,GACV,CAFQ,CAEP,CAACH,OAAD,CAFO,CAAT,CAIA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,sHAChBC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAC,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,QAAEA,CAAAA,QAAQ,CAACC,IAAT,EAAF,EADhB,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAE,CACVN,OAAO,CAACC,GAAR,CAAYK,IAAZ,EACAX,eAAe,CAACW,IAAD,CAAf,CACD,CALH,EAFgB,8CAAlB,CAWA,MAEE,gCAEI,oBAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,EACE,iCACE,8BACE,qCADF,CAEE,4CAFF,CAGE,iDAHF,CAIE,4CAJF,CAKE,kCALF,CAME,kCANF,CAOE,kCAPF,CADF,CADF,CAYE,iCAEKZ,YAAY,CAACa,GAAb,CAAiB,SAACC,IAAD,CAAMC,GAAN,QAChB,2BAAI,GAAG,CAAGA,GAAV,EACE,8BAAKD,IAAI,CAACE,IAAV,CADF,CAEE,8BAAKpB,SAAS,CAACkB,IAAI,CAACG,MAAN,CAAd,CAFF,CAGE,8BAAKrB,SAAS,CAACkB,IAAI,CAACI,MAAN,CAAd,CAHF,CAIE,8BAAKtB,SAAS,CAACkB,IAAI,CAACK,GAAN,CAAd,CAJF,CAKE,8BAEE,oBAAC,cAAD,EAAgB,IAAI,CAAEL,IAAI,CAACE,IAA3B,CAAiC,OAAO,CAAGZ,aAA3C,CAA0D,GAAG,CAAE,IAA/D,CAAqE,GAAG,CAAEL,KAAK,CAACqB,OAAN,CAAcC,UAAxF,EAFF,CALF,CASE,8BACE,oBAAC,mBAAD,EAAqB,IAAI,CAAEP,IAAI,CAACE,IAAhC,CAAsC,OAAO,CAAGZ,aAAhD,CAA+D,GAAG,CAAE,IAApE,CAA0E,GAAG,CAAEU,IAAI,CAACI,MAApF,EADF,CATF,CAaE,8BACA,oBAAC,gBAAD,EAAkB,IAAI,CAAEJ,IAAI,CAACE,IAA7B,CAAmC,OAAO,CAAGZ,aAA7C,EADA,CAbF,CADgB,EAAjB,CAFL,CAZF,CAFJ,CAFF,CA0CD,CAED,cAAeN,CAAAA,YAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Table,Container,Row} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat,ThousandsFormat } from '../libs/numberFormat';\n\nfunction CurrentAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n  const [refresh,setRefresh] = useState(false);\n\n  const handleRefresh = () => {\n    setRefresh(!{refresh}.refresh);\n  }\n\n  useEffect(()=>{\n    fetchData();\n  },[refresh]);\n\n  const fetchData = async() => {\n    console.log(\"fetching algos\")\n    fetch('http://localhost:5000/getalgos')\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data)\n        setCurrentAlgos(data)\n      })\n  }\n\n  \n  return (\n    \n    <div>\n        \n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Margin Used</th>\n              <th>Amount Allocated</th>\n              <th>Profit/Loss</th>\n              <th>-</th>\n              <th>-</th>\n              <th>-</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{USDFormat(item.margin)}</td>\n                  <td>{USDFormat(item.amount)}</td>\n                  <td>{USDFormat(item.pnl)}</td>\n                  <td>\n                    \n                    <AddAmountModal name={item.name} refresh ={handleRefresh} min={5000} max={props.summary.marginfree}/>\n                  </td> \n                  <td>\n                    <WithdrawAmountModal name={item.name} refresh ={handleRefresh} min={5000} max={item.amount}/>\n                    \n                  </td>\n                  <td>\n                  <AlgoDetailsModal name={item.name} refresh ={handleRefresh} />\n                  </td>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default CurrentAlgos;\n"]},"metadata":{},"sourceType":"module"}