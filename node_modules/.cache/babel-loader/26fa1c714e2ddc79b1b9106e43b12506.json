{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AllAlgos.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, Table, Row, Col } from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction AllAlgos(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentAlgos = _useState2[0],\n        setCurrentAlgos = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        show = _useState4[0],\n        setShow = _useState4[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    console.log(\"XXXXX\");\n    console.log(props.allAlgos);\n  }, [props.userid, props.allAlgos]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"info\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Add New Algo\"), React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Amount Allocated\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Profit/Loss\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, currentAlgos.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, item.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, USDFormat(item.amount)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, USDFormat(item.pnl)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(AddAmountModal, {\n    userid: props.userid,\n    name: item.name,\n    min: 5000,\n    max: props.summary.amountfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(AlgoDetailsModal, {\n    name: item.name,\n    userid: props.userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Close\"))));\n}\n\nexport default AllAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AllAlgos.js"],"names":["React","useState","useEffect","Button","Modal","Table","Row","Col","AddAmountModal","AlgoDetailsModal","USDFormat","config","AllAlgos","props","currentAlgos","setCurrentAlgos","show","setShow","handleClose","handleShow","console","log","allAlgos","userid","name","map","item","key","amount","pnl","summary","amountfree"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Button,Modal,Table,Row,Col} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction AllAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(()=>{\n    console.log(\"XXXXX\")\n    console.log(props.allAlgos)\n    \n  },[props.userid,props.allAlgos]);\n\n  \n  \n  return (\n    \n    <div>\n      <Button variant=\"info\" onClick={handleShow}>\n        Add New Algo\n      </Button>\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Amount Allocated</th>\n              <th>Profit/Loss</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{USDFormat(item.amount)}</td>\n                  <td>{USDFormat(item.pnl)}</td>\n                  <Row>\n                    \n                  <Col>\n                  <AddAmountModal userid={props.userid} name={item.name}  min={5000} max={props.summary.amountfree}/>\n                  </Col>  \n                  <Col>\n                  <AlgoDetailsModal name={item.name} userid={props.userid}  />\n                  </Col>\n                  </Row>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n        \n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        \n    </div>\n  );\n}\n\nexport default AllAlgos;\n"]},"metadata":{},"sourceType":"module"}