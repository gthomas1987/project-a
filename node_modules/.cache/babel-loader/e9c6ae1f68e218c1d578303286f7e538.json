{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport NPVChart from './NPVChart';\nimport Summary from './Summary';\nimport CurrentAlgos from './CurrentAlgos';\nimport AllAlgos from './AllAlgos';\nimport config from '../config';\nimport { Auth } from \"aws-amplify\";\n\nfunction Dashboard(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        summary = _useState2[0],\n        setSummary = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        npvChart = _useState4[0],\n        setNpvChart = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userid = _useState6[0],\n        setUserid = _useState6[1];\n\n  async function onLoad() {\n    await Auth.currentAuthenticatedUser({\n      bypassCache: false // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n\n    }).then(user => setUserid(user.username)).catch(err => console.log(err));\n  }\n\n  useEffect(() => {\n    onLoad();\n\n    async function FetchSummary() {\n      const data = {\n        \"userid\": userid\n      };\n      await fetch(config.apiGateway.URL + \"/getsummary\", {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"Fetching dashboard API\");\n        setSummary(data);\n        console.log(data);\n        setNpvChart(data.npvchart);\n      }).catch(error => console.log(error));\n    }\n\n    FetchSummary();\n  }, [usserid]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    userid: userid,\n    summary: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NPVChart, {\n    npvchart: npvChart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Algos\")), React.createElement(Col, {\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(AllAlgos, {\n    summary: summary,\n    userid: userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })))), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(CurrentAlgos, {\n    summary: summary,\n    userid: userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Container","Row","Col","Accordion","Button","Card","NPVChart","Summary","CurrentAlgos","AllAlgos","config","Auth","Dashboard","props","summary","setSummary","npvChart","setNpvChart","userid","setUserid","onLoad","currentAuthenticatedUser","bypassCache","then","user","username","catch","err","console","log","FetchSummary","data","fetch","apiGateway","URL","method","body","JSON","stringify","headers","response","json","npvchart","error","usserid"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\nimport NPVChart from './NPVChart'\nimport Summary from './Summary'\nimport CurrentAlgos from './CurrentAlgos'\nimport AllAlgos from './AllAlgos'\nimport config from '../config';\nimport { Auth } from \"aws-amplify\";\n\nfunction Dashboard(props) {\n  const [summary,setSummary] = useState([]);\n  const [npvChart,setNpvChart] = useState([]);\n  const [userid,setUserid] = useState(\"\");\n\n  \n\n  async function onLoad(){\n    await Auth.currentAuthenticatedUser({\n      bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n    })\n    .then(user => setUserid(user.username))\n    .catch(err => console.log(err));\n  }\n\n  \n  \n  useEffect(()=>{\n    \n    onLoad();\n    async function FetchSummary(){\n      const data = {\"userid\":userid}\n      await fetch(config.apiGateway.URL+\"/getsummary\", {\n          method: 'POST', // or 'PUT'\n          body: JSON.stringify(data), // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(response=>response.json())\n        .then(data=>{\n          console.log(\"Fetching dashboard API\")\n          setSummary(data)\n          console.log(data)\n          setNpvChart(data.npvchart)\n        })\n        .catch(error=>console.log(error));\n    }\n    FetchSummary();\n    \n  },[usserid]);\n\n  \n  return (\n    \n    <Container>\n      <br></br>\n      <br></br>\n      <Row>\n        <Col><Summary userid={userid} summary={summary}/></Col>\n        <Col><NPVChart npvchart={npvChart}/></Col>\n        \n      </Row>\n      <br></br>\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            <Row>\n            <Col sm={10}>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Algos\n            </Accordion.Toggle>\n            </Col>\n            <Col sm={2}>\n            <AllAlgos summary={summary} userid={userid} />\n            </Col>\n            </Row>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body><CurrentAlgos summary={summary} userid={userid} /></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}