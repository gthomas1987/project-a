{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgosChart.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport config from '../config';\n\nclass TopAlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => this.setState({\n      show: false\n    });\n\n    this.handleShow = () => this.setState({\n      show: true\n    });\n\n    this.state = {\n      accounttype: props.accounttype,\n      show: false,\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'bar'\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      }\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n  }\n\n  async runQuery() {\n    const data = {\n      \"accounttype\": this.state.accounttype\n    };\n    await fetch(config.apiGateway.URL + \"/gettopalgos\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Fetching top algos API\");\n      console.log(data);\n      this.setState({\n        show: true,\n        series: [{\n          data: Object.values(data.topalgos)\n        }],\n        options: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar'\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos)\n          }\n        }\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.runQuery();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.show ? React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      height: \"150%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"info\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Loading...\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TopAlgosChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgosChart.js"],"names":["React","ReactApexChart","Container","Row","Col","Spinner","config","TopAlgosChart","Component","constructor","props","handleClose","setState","show","handleShow","state","accounttype","series","data","options","chart","type","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","categories","bind","runQuery","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","Object","values","topalgos","foreColor","keys","catch","error","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport {Container,Row,Col,Spinner} from 'react-bootstrap';\nimport config from '../config';\n\nclass TopAlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounttype:props.accounttype,\n      show:false,\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: [],\n        }\n      },\n    \n      \n    };\n    this.handleClose = this.handleClose.bind(this)\n    this.handleShow = this.handleShow.bind(this)\n    this.runQuery = this.runQuery.bind(this)\n  }\n\n  handleClose = () => this.setState({show:false});\n  handleShow = () => this.setState({show:true});\n\n  async runQuery(){\n    const data = {\"accounttype\":this.state.accounttype}\n    await fetch(config.apiGateway.URL+\"/gettopalgos\", {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n    })\n    .then(response=>response.json())\n    .then(data=>{\n      console.log(\"Fetching top algos API\")\n      console.log(data)\n      this.setState({\n        show:true,\n        series: [{\n          data: Object.values(data.topalgos)\n        }],\n        options: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar',\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos) ,\n          }\n        },\n      \n        \n      })\n\n    })\n    .catch(error=>console.log(error));\n  }\n\n  componentDidMount(){\n    this.runQuery()\n  }\n\n  render() {\n    return (\n      \n      <div id=\"chart\">\n      {this.state.show\n        ?\n        <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height=\"150%\" />\n        :\n      <div>\n        <Container>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Row>\n        <Col></Col>\n        <Col md=\"auto\">\n          <Spinner animation=\"border\" variant =\"info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </Col>\n        <Col></Col>\n        </Row>\n        </Container>\n        </div>\n        }\n        </div>\n    );\n  }\n}\n\nexport default TopAlgosChart"]},"metadata":{},"sourceType":"module"}