{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport NPVChart from './NPVChart';\nimport Summary from './Summary';\nimport CurrentAlgos from './CurrentAlgos';\nimport AllAlgos from './AllAlgos';\nimport config from '../config';\n\nfunction Dashboard(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        summary = _useState2[0],\n        setSummary = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        npvX = _useState4[0],\n        setNpvX = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        npvY = _useState6[0],\n        setNpvY = _useState6[1];\n\n  useEffect(() => {\n    fetch(config.apiGateway.URL + \"/getsummary\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(props.location.state),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setSummary(data);\n      setNpvX(Object.keys(data.npvchart));\n      setNpvY(Object.values(data.npvchart));\n    }).catch(error => console.log(error));\n  }, [props.location]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    summary: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(NPVChart, {\n    x: npvX,\n    y: npvY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Algos\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(AllAlgos, {\n    summary: summary,\n    email: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(CurrentAlgos, {\n    summary: summary,\n    email: props.location.state.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Container","Row","Col","Accordion","Button","Card","NPVChart","Summary","CurrentAlgos","AllAlgos","config","Dashboard","props","summary","setSummary","npvX","setNpvX","npvY","setNpvY","fetch","apiGateway","URL","method","body","JSON","stringify","location","state","headers","then","response","json","data","Object","keys","npvchart","values","catch","error","console","log","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAwD,iBAAxD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,oBACKd,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACjBe,OADiB;AAAA,QACTC,UADS;;AAAA,qBAEDhB,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,QAEjBiB,IAFiB;AAAA,QAEZC,OAFY;;AAAA,qBAGDlB,QAAQ,CAAC,EAAD,CAHP;AAAA;AAAA,QAGjBmB,IAHiB;AAAA,QAGZC,OAHY;;AAIxBnB,EAAAA,SAAS,CAAC,MAAI;AACZoB,IAAAA,KAAK,CAACT,MAAM,CAACU,UAAP,CAAkBC,GAAlB,GAAsB,aAAvB,EAAsC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AACvB;AAChBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACc,QAAN,CAAeC,KAA9B,CAFiC;AAEK;AAC5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH;AAH8B,KAAtC,CAAL,CAQGC,IARH,CAQQC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EARlB,EASGF,IATH,CASQG,IAAI,IAAE;AACVlB,MAAAA,UAAU,CAACkB,IAAD,CAAV;AACAhB,MAAAA,OAAO,CAACiB,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACG,QAAjB,CAAD,CAAP;AACAjB,MAAAA,OAAO,CAACe,MAAM,CAACG,MAAP,CAAcJ,IAAI,CAACG,QAAnB,CAAD,CAAP;AACD,KAbH,EAcGE,KAdH,CAcSC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAdhB;AAeD,GAhBQ,EAgBP,CAAC1B,KAAK,CAACc,QAAP,CAhBO,CAAT;AAmBA,SAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,QAAD;AAAU,IAAA,CAAC,EAAEE,IAAb;AAAmB,IAAA,CAAC,EAAEE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFF,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAEb,MAAtB;AAA8B,IAAA,OAAO,EAAC,MAAtC;AAA6C,IAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAwC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAES,OAAnB;AAA4B,IAAA,KAAK,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CADF,CAFF,CADF,EAOE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAgC,IAAA,KAAK,EAAED,KAAK,CAACc,QAAN,CAAeC,KAAf,CAAqBc,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADF,CAPF,CADF,CATF,CAFF;AA0BD;;AAED,eAAe9B,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\nimport NPVChart from './NPVChart'\nimport Summary from './Summary'\nimport CurrentAlgos from './CurrentAlgos'\nimport AllAlgos from './AllAlgos'\nimport config from '../config';\n\nfunction Dashboard(props) {\n  const [summary,setSummary] = useState([]);\n  const [npvX,setNpvX] = useState([]);\n  const [npvY,setNpvY] = useState([]);\n  useEffect(()=>{\n    fetch(config.apiGateway.URL+\"/getsummary\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(props.location.state), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      .then(response=>response.json())\n      .then(data=>{\n        setSummary(data)\n        setNpvX(Object.keys(data.npvchart))\n        setNpvY(Object.values(data.npvchart))\n      })\n      .catch(error=>console.log(error));\n  },[props.location]);\n\n  \n  return (\n    \n    <Container>\n      <br></br>\n      <br></br>\n      <Row>\n        <Col><Summary summary={summary}/></Col>\n        <Col><NPVChart x={npvX} y={npvY}/></Col>\n        \n      </Row>\n      <br></br>\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            \n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              <Row>Algos&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<AllAlgos summary={summary} email=\"admin\"/></Row>\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body><CurrentAlgos summary={summary} email={props.location.state.email}/></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}