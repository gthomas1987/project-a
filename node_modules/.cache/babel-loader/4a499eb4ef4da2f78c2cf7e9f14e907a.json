{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/TopAlgosChart.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Button, Modal } from 'react-bootstrap';\nimport config from '../config';\n\nclass TopAlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => this.setState({\n      show: false\n    });\n\n    this.handleShow = () => this.setState({\n      show: true\n    });\n\n    this.state = {\n      show: false,\n      series: [{\n        data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany']\n        }\n      }\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n  }\n\n  async runQuery() {\n    await fetch(config.apiGateway.URL + \"/gettopalgos\", {\n      method: 'GET',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Fetching top algos API\");\n      console.log(data);\n      this.state = {\n        show: false,\n        series: [{\n          data: Object.values(data.topalgos)\n        }],\n        options: {\n          chart: {\n            type: 'bar',\n            height: 350\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos)\n          }\n        }\n      };\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      onClick: this.runQuery,\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Top Performing Algos\"), React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.name)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"bar\",\n      height: 350,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default TopAlgosChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/TopAlgosChart.js"],"names":["React","ReactApexChart","Button","Modal","config","TopAlgosChart","Component","constructor","props","handleClose","setState","show","handleShow","state","series","data","options","chart","type","height","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","categories","bind","runQuery","fetch","apiGateway","URL","method","headers","then","response","json","console","log","Object","values","topalgos","keys","catch","error","render","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport {Button,Modal} from 'react-bootstrap';\nimport config from '../config';\n\nclass TopAlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show:false,\n      series: [{\n        data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',\n            'United States', 'China', 'Germany'\n          ],\n        }\n      },\n    \n      \n    };\n    this.handleClose = this.handleClose.bind(this)\n    this.handleShow = this.handleShow.bind(this)\n    this.runQuery = this.runQuery.bind(this)\n  }\n\n  handleClose = () => this.setState({show:false});\n  handleShow = () => this.setState({show:true});\n\n  async runQuery(){\n    await fetch(config.apiGateway.URL+\"/gettopalgos\", {\n      method: 'GET', // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    .then(response=>response.json())\n    .then(data=>{\n      console.log(\"Fetching top algos API\")\n      console.log(data)\n      this.state = {\n        show:false,\n        series: [{\n          data: Object.values(data.topalgos)\n        }],\n        options: {\n          chart: {\n            type: 'bar',\n            height: 350\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos) ,\n          }\n        },\n      \n        \n      };\n\n    })\n    .catch(error=>console.log(error));\n  }\n\n  render() {\n    return (\n      <div id=\"chart\">\n      <Button size=\"sm\" variant=\"primary\" onClick={this.runQuery} block  >\n        Top Performing Algos\n      </Button>\n      <Modal size=\"lg\" show={this.state.show} onHide={this.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TopAlgosChart"]},"metadata":{},"sourceType":"module"}