{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Withdraw.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport config from '../config';\nexport function Withdraw(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItems = _useState4[1];\n\n  const _useState5 = useState(5000),\n        _useState6 = _slicedToArray(_useState5, 2),\n        amount = _useState6[0],\n        setAmount = _useState6[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const AmountValue = e => setAmount(e.target.value);\n\n  useEffect(() => {\n    const itemsToAdd = [];\n\n    for (var i = props.min; i <= props.max; i = i + 5000) {\n      itemsToAdd.push(i);\n    }\n\n    setItems(itemsToAdd);\n  }, [props.max, props.min]);\n\n  const handleAdd = event => {\n    event.preventDefault();\n    setShow(false);\n    UpdateCash();\n    props.refresh();\n  };\n\n  const UpdateCash = async () => {\n    try {\n      const data = {\n        \"email\": props.email,\n        \"amount\": {\n          amount\n        }.amount,\n        \"action\": \"withdraw\"\n      };\n      await fetch(config.apiGateway.URL + '/updateCash', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {}\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"outline-danger\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Withdraw\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Amount To Withdraw\"), React.createElement(Form.Control, {\n    onChange: AmountValue,\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, items.map((item, key) => React.createElement(\"option\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, item))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Withdraw Amount\")))));\n}","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Withdraw.js"],"names":["React","useState","useEffect","Modal","Button","Form","config","Withdraw","props","show","setShow","items","setItems","amount","setAmount","handleClose","handleShow","AmountValue","e","target","value","itemsToAdd","i","min","max","push","handleAdd","event","preventDefault","UpdateCash","refresh","data","email","fetch","apiGateway","URL","method","body","JSON","stringify","headers","error","name","map","item","key"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button,Form} from 'react-bootstrap'\nimport config from '../config';\n\nexport function Withdraw(props) {\n  \n  const [show, setShow] = useState(false);\n  const [items, setItems] = useState([]);\n  const [amount, setAmount] = useState(5000);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const AmountValue = (e) => setAmount(e.target.value);\n\n  useEffect(()=>{\n    const itemsToAdd=[]\n    for (var i=props.min;i<=props.max;i=i+5000){\n      itemsToAdd.push(i)\n    }\n    setItems(itemsToAdd)\n  },[props.max,props.min]);\n  \n  \n  const handleAdd = (event) => {\n    event.preventDefault();\n    setShow(false)\n    UpdateCash();\n    props.refresh()\n  }\n\n  \n\n  const UpdateCash = async() => {\n    try {\n      const data = {\"email\":props.email,\"amount\":{amount}.amount,\"action\":\"withdraw\"}\n      await fetch(config.apiGateway.URL+'/updateCash', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n    }\n  }\n  \n\n  return (\n    <>\n      <Button variant=\"outline-danger\" onClick={handleShow}>\n        Withdraw\n      </Button>\n      <Form>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Amount To Withdraw</Form.Label>\n            <Form.Control onChange = {AmountValue} as=\"select\">\n              {items.map((item,key)=>(\n                <option key={key}>{item}</option>\n              ))}\n              \n            </Form.Control>\n          </Form.Group>\n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button type = \"submit\"variant=\"primary\" onClick={handleAdd}>\n            Withdraw Amount\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Form>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}