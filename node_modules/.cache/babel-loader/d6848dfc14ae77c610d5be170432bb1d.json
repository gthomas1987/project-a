{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\n\nfunction Login(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"Live\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        accountType = _useState6[0],\n        setAccountType = _useState6[1];\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleAccountChange(event) {\n    if (event.target.value === \"Live\") {\n      setAccountType(\"Paper\");\n    } else {\n      setAccountType(\"Live\");\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      await Auth.signIn(email, password);\n      props.userHasAuthenticated(true);\n      sessionStorage.setItem(\"email\", email);\n      sessionStorage.setItem(\"accounttype\", accountType);\n      props.history.push({\n        pathname: \"/dashboard\"\n      });\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Card, {\n    bg: \"dark\",\n    text: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    autoFocus: true,\n    value: email,\n    type: \"email\",\n    placeholder: \"Enter email\",\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    value: password,\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formAccountType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    value: accountType,\n    type: \"checkbox\",\n    label: \"Paper Account\",\n    onChange: handleAccountChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"lg\",\n    variant: \"info\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\")))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Login.js"],"names":["React","useState","Card","Form","Button","Container","Row","Col","Auth","Login","props","email","setEmail","password","setPassword","accountType","setAccountType","validateForm","length","handleAccountChange","event","target","value","handleSubmit","preventDefault","signIn","userHasAuthenticated","sessionStorage","setItem","history","push","pathname","e","alert","message"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {Card,Form,Button,Container,Row,Col} from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\n\n\n\nfunction Login(props) {\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [accountType,setAccountType] = useState(\"Live\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleAccountChange(event){\n    if(event.target.value===\"Live\"){\n      setAccountType(\"Paper\")\n    }\n    else{\n      setAccountType(\"Live\")\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await Auth.signIn(email, password);\n      props.userHasAuthenticated(true);\n      sessionStorage.setItem(\"email\",email)\n      sessionStorage.setItem(\"accounttype\",accountType)\n      props.history.push({pathname:\"/dashboard\"});\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n  \n  \n  return (\n    <Container>\n      <br></br>\n      <Row>\n        \n        <Col></Col>\n        <Col >\n        <Card bg=\"dark\" text=\"white\" >\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\"  >\n              <Form.Label>Email</Form.Label>\n              <Form.Control autoFocus value={email} type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)}/>\n              \n            </Form.Group>\n\n            <Form.Group  controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control value={password} type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group  controlId=\"formAccountType\">\n            <Form.Check value={accountType} type=\"checkbox\" label=\"Paper Account\" onChange={handleAccountChange} />\n            </Form.Group>\n            <br></br>\n            <Button size=\"lg\" variant=\"info\" disabled={!validateForm()} type=\"submit\" block>\n              Submit\n            </Button>\n          </Form>\n          </Card>\n        </Col>\n        <Col></Col>\n        \n      </Row>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n    </Container>\n   \n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}