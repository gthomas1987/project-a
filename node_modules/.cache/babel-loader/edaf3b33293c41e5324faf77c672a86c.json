{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport Summary from './Summary';\nimport CurrentAlgos from './CurrentAlgos';\nimport AllAlgos from './AllAlgos';\nimport config from '../config';\nimport { Auth } from \"aws-amplify\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userid: \"\",\n      summary: {\n        pnl: 0.0,\n        npv: 0.0,\n        cashDep: 0.0,\n        amountAlloc: 0.0,\n        usagePer: \"0.0%\",\n        amountFree: 0.0\n      }\n    };\n    this.refreshDashboard = this.refreshDashboard.bind(this);\n  }\n\n  async refreshDashboard() {\n    const data = {\n      \"userid\": this.state.userid\n    };\n    await fetch(config.apiGateway.URL + \"/getsummary\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Fetching summary API\");\n      console.log(data);\n      console.log(this.props);\n      this.setState({\n        summary: {\n          pnl: data.pnl,\n          npv: data.npv,\n          cashDep: data.accountbalance,\n          amountAlloc: data.amountallocated,\n          usagePer: data.usagelevel,\n          amountFree: data.amountfree\n        }\n      });\n    }).catch(error => console.log(error));\n  }\n\n  async componentDidMount() {\n    await Auth.currentAuthenticatedUser({\n      bypassCache: false // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n\n    }).then(user => {\n      console.log(user);\n      this.setState({\n        userid: user.username\n      });\n      console.log(\"ZZZZZ\");\n      console.log(this.state.userid);\n    }).catch(err => console.log(err));\n    this.refreshDashboard();\n  }\n\n  render() {\n    console.log(\"Dashboard render\");\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Summary, {\n      userid: this.state.userid,\n      summary: this.state.summary,\n      refresh: this.refreshDashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Algos\")), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(CurrentAlgos, {\n      userid: this.state.userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Container","Row","Col","Accordion","Button","Card","Summary","CurrentAlgos","AllAlgos","config","Auth","Dashboard","Component","constructor","props","state","userid","summary","pnl","npv","cashDep","amountAlloc","usagePer","amountFree","refreshDashboard","bind","data","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","setState","accountbalance","amountallocated","usagelevel","amountfree","catch","error","componentDidMount","currentAuthenticatedUser","bypassCache","user","username","err","render"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\nimport Summary from './Summary'\nimport CurrentAlgos from './CurrentAlgos'\nimport AllAlgos from './AllAlgos'\nimport config from '../config';\nimport { Auth } from \"aws-amplify\";\n\nclass Dashboard extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      userid:\"\",\n      summary:{\n        pnl:0.0,\n        npv:0.0,\n        cashDep:0.0,\n        amountAlloc:0.0,\n        usagePer:\"0.0%\",\n        amountFree:0.0\n      }\n    };\n    this.refreshDashboard = this.refreshDashboard.bind(this)\n  }\n  \n  async refreshDashboard(){\n    const data = {\"userid\":this.state.userid}\n    await fetch(config.apiGateway.URL+\"/getsummary\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(\"Fetching summary API\")\n        console.log(data)\n        console.log(this.props)\n        this.setState({\n          summary:{\n            pnl:data.pnl,\n            npv:data.npv,\n            cashDep:data.accountbalance,\n            amountAlloc:data.amountallocated,\n            usagePer:data.usagelevel,\n            amountFree:data.amountfree\n          }\n        });\n\n      })\n      .catch(error=>console.log(error));\n  }\n\n  async componentDidMount(){\n    \n    await Auth.currentAuthenticatedUser({\n      bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n    })\n    .then(user => {\n      console.log(user)\n      this.setState({userid:user.username})\n      console.log(\"ZZZZZ\")\n      console.log(this.state.userid)\n      }\n    )\n    .catch(err => console.log(err));\n\n    this.refreshDashboard()\n    \n  }\n\n  \n\n  \n  \n  render(){\n    console.log(\"Dashboard render\")\n    return (\n    \n      <Container>\n        <br></br>\n        <br></br>\n        <Row>\n          <Col><Summary userid={this.state.userid} summary={this.state.summary} refresh={this.refreshDashboard} /></Col>\n          \n          \n        </Row>\n        <br></br>\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Card.Header>\n              <Row>\n              <Col sm={10}>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                Algos\n              </Accordion.Toggle>\n              </Col>\n              <Col sm={2}>\n              {/*<AllAlgos  userid={this.state.userid} />*/}\n              </Col>\n              </Row>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body><CurrentAlgos userid={this.state.userid} /></Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Container>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}