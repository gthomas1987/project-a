{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\n\nfunction CurrentAlgos(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentAlgos = _useState2[0],\n        setCurrentAlgos = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refresh = _useState4[0],\n        setRefresh = _useState4[1];\n\n  const handleRefresh = () => {\n    setRefresh(!{\n      refresh\n    });\n    console.log(\"trying to refresh\");\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"Rendering\");\n  }, []);\n\n  const fetchData = async () => {\n    fetch('http://localhost:5000/getalgos').then(response => response.json()).then(data => {\n      console.log(data);\n      setCurrentAlgos(data);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Margin\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sec1\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sec2\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Px_Sec1\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Px_Sec2\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, currentAlgos.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, item.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, item.margin), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, item.amount), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item.security1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, item.security2), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, item.pricesecurity1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, item.pricesecurity1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AddAmountModal, {\n    name: item.name,\n    refresh: handleRefresh,\n    min: 5000,\n    max: props.summary.marginfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"    \"), React.createElement(WithdrawAmountModal, {\n    name: item.name,\n    min: 5000,\n    max: item.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))))));\n}\n\nexport default CurrentAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js"],"names":["React","useState","useEffect","Table","AddAmountModal","WithdrawAmountModal","CurrentAlgos","props","currentAlgos","setCurrentAlgos","refresh","setRefresh","handleRefresh","console","log","fetchData","fetch","then","response","json","data","map","item","key","name","margin","amount","security1","security2","pricesecurity1","summary","marginfree"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Table} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\n\nfunction CurrentAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n  const [refresh,setRefresh] = useState(false);\n\n  const handleRefresh = () => {\n    setRefresh(!{refresh});\n    console.log(\"trying to refresh\")\n}\n\n  useEffect(()=>{\n    fetchData();\n    console.log(\"Rendering\")\n  },[]);\n\n  const fetchData = async() => {\n    fetch('http://localhost:5000/getalgos')\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data)\n        setCurrentAlgos(data)\n      })\n  }\n\n  \n  return (\n    \n    <div>\n        \n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Margin</th>\n              <th>Amount</th>\n              <th>Sec1</th>\n              <th>Sec2</th>\n              <th>Px_Sec1</th>\n              <th>Px_Sec2</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{item.margin}</td>\n                  <td>{item.amount}</td>\n                  <td>{item.security1}</td>\n                  <td>{item.security2}</td>\n                  <td>{item.pricesecurity1}</td>\n                  <td>{item.pricesecurity1}</td>\n                  <td>\n                    <AddAmountModal name={item.name} refresh ={handleRefresh} min={5000} max={props.summary.marginfree}/>\n                    <span>    </span>\n                    <WithdrawAmountModal name={item.name} min={5000} max={item.amount}/>\n                  </td>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default CurrentAlgos;\n"]},"metadata":{},"sourceType":"module"}