{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgoDetailsModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Table } from 'react-bootstrap';\n\nfunction AlgoDetailsModal(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        positions = _useState4[0],\n        setPositions = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        trades = _useState6[0],\n        setTrades = _useState6[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    const data = {\n      \"algoname\": props.name\n    };\n    fetch('http://localhost:5000/getalgodetails', {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data.positions);\n      console.log(data.trades);\n      setPositions(data.positions);\n      setTrades(data.trades);\n    }).catch(error => console.log(error));\n  }, [props.name]);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Details\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Security\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Symbol\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Exchange\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Currency\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, positions.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, item.security), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, item.symbol), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, item.exchange), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, item.ccy)))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Close\")))));\n}\n\nexport default AlgoDetailsModal;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgoDetailsModal.js"],"names":["React","useState","useEffect","Modal","Button","Form","Table","AlgoDetailsModal","props","show","setShow","positions","setPositions","trades","setTrades","handleClose","handleShow","data","name","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","catch","error","map","item","key","security","symbol","exchange","ccy"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button,Form,Table} from 'react-bootstrap'\n\nfunction AlgoDetailsModal(props) {\n  \n  const [show, setShow] = useState(false);\n  const [positions, setPositions] = useState([]);\n  const [trades, setTrades] = useState([]);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(()=>{\n    \n    const data = {\"algoname\":props.name}\n    fetch('http://localhost:5000/getalgodetails', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data.positions)\n        console.log(data.trades)\n        setPositions(data.positions)\n        setTrades(data.trades)\n      })\n      .catch(error=>console.log(error));\n  },[props.name]);\n  \n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Details\n      </Button>\n      <Form>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Security</th>\n              <th>Symbol</th>\n              <th>Exchange</th>\n              <th>Currency</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {positions.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.security}</td>\n                  <td>{item.symbol}</td>\n                  <td>{item.exchange}</td>\n                  <td>{item.ccy}</td>\n                  \n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n          \n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Form>\n    </>\n  );\n}\n\n\nexport default AlgoDetailsModal;\n"]},"metadata":{},"sourceType":"module"}