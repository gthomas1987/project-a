{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Summary.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { USDFormat } from '../libs/numberFormat';\nimport { Deposit } from './Deposit';\nimport { Withdraw } from './Withdraw';\nimport config from '../config';\n\nclass Summary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pnl: 0.0,\n      npv: 0.0,\n      cashDep: 0.0,\n      amountAlloc: 0.0,\n      usagePer: \"0.0%\",\n      amountFree: 0.0\n    };\n  }\n\n  componentDidMount() {\n    async function FetchSummary() {\n      const data = {\n        \"userid\": props.userid\n      };\n      await fetch(config.apiGateway.URL + \"/getsummary\", {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"Fetching summary API\");\n        console.log(data);\n        setPnl(data.pnl);\n        setNpv(data.npv);\n        setCashDep(data.accountbalance);\n        setAmountAlloc(data.amountallocated);\n        setUsagePer(data.usagelevel);\n        setAmountFree(data.amountfree);\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Profit/Loss\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, USDFormat(pnl))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"NPV\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, USDFormat(npv))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Cash Deposited\\xA0\\xA0\\xA0\", React.createElement(Deposit, {\n      userid: props.userid,\n      min: 5000,\n      max: 50000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, USDFormat(cashDep))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Amount Allocated\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, USDFormat(amountAlloc))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Usage (%)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, usagePer)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Amount Free\\xA0\\xA0\\xA0\", React.createElement(Withdraw, {\n      userid: props.userid,\n      min: 0,\n      max: props.summary.amountfree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, USDFormat(amountFree))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NPVChart, {\n      npvchart: npvChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Summary;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Summary.js"],"names":["React","useEffect","useState","Table","USDFormat","Deposit","Withdraw","config","Summary","Component","constructor","props","state","pnl","npv","cashDep","amountAlloc","usagePer","amountFree","componentDidMount","FetchSummary","data","userid","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","setPnl","setNpv","setCashDep","accountbalance","setAmountAlloc","amountallocated","setUsagePer","usagelevel","setAmountFree","amountfree","catch","error","render","summary","npvChart"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {Table} from 'react-bootstrap';\nimport {USDFormat} from '../libs/numberFormat'\nimport {Deposit} from './Deposit'\nimport {Withdraw} from './Withdraw'\nimport config from '../config';\n\nclass Summary extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      pnl:0.0,\n      npv:0.0,\n      cashDep:0.0,\n      amountAlloc:0.0,\n      usagePer:\"0.0%\",\n      amountFree:0.0\n    }\n  }\n  \n  componentDidMount() {\n    async function FetchSummary(){\n      const data = {\"userid\":props.userid}\n      await fetch(config.apiGateway.URL+\"/getsummary\", {\n          method: 'POST', // or 'PUT'\n          body: JSON.stringify(data), // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(response=>response.json())\n        .then(data=>{\n          console.log(\"Fetching summary API\")\n          console.log(data)\n          setPnl(data.pnl)\n          setNpv(data.npv)\n          setCashDep(data.accountbalance)\n          setAmountAlloc(data.amountallocated)\n          setUsagePer(data.usagelevel)\n          setAmountFree(data.amountfree)\n\n        })\n        .catch(error=>console.log(error));\n    }\n  }\n\n \n  render (){\n    return (\n      <div>\n          <Table striped bordered hover>\n            <tbody>\n              \n              <tr>\n                <td>Profit/Loss</td>\n                <td>{USDFormat(pnl)}</td>\n              </tr>\n              <tr>\n                <td>NPV</td>\n                <td>{USDFormat(npv)}</td>\n              </tr>\n              <tr>\n                <td>Cash Deposited&nbsp;&nbsp;&nbsp;<Deposit userid={props.userid} min={5000} max={50000}/></td>\n                <td>{USDFormat(cashDep)}</td>\n              </tr>\n              \n              <tr>\n                <td>Amount Allocated</td>\n                <td>{USDFormat(amountAlloc)}</td>\n              </tr>\n              <tr>\n                <td>Usage (%)</td>\n                <td>{usagePer}</td>\n              </tr>\n              <tr>\n                <td>Amount Free&nbsp;&nbsp;&nbsp;<Withdraw userid={props.userid} min={0} max={props.summary.amountfree}/></td>\n                <td>{USDFormat(amountFree)}</td>\n              </tr>\n              \n            </tbody>\n          </Table>\n          <Col><NPVChart npvchart={npvChart}/></Col>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n"]},"metadata":{},"sourceType":"module"}