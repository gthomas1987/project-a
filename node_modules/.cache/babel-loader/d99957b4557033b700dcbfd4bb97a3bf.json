{"ast":null,"code":"import _regeneratorRuntime from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Modal,Button,Form}from'react-bootstrap';function WithdrawAmountModal(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),items=_useState4[0],setItems=_useState4[1];var _useState5=useState(5000),_useState6=_slicedToArray(_useState5,2),amount=_useState6[0],setAmount=_useState6[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};var AmountValue=function AmountValue(e){return setAmount(e.target.value);};useEffect(function(){var itemsToAdd=[];for(var i=props.min;i<=props.max;i=i+props.min){itemsToAdd.push(i);}setItems(itemsToAdd);},[props.max,props.min]);var handleAdd=function handleAdd(event){event.preventDefault();setShow(false);UpdateAmount();props.refresh();};var UpdateAmount=function UpdateAmount(){var data,response;return _regeneratorRuntime.async(function UpdateAmount$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;data={\"algoname\":props.name,\"amount\":{amount:amount}.amount,\"action\":\"withdraw\"};_context.next=4;return _regeneratorRuntime.awrap(fetch('http://localhost:5000/updateAmount',{method:'POST',// or 'PUT'\nbody:JSON.stringify(data),// data can be `string` or {object}!\nmode:'no-cors',headers:{'Content-Type':'application/json'}}));case 4:response=_context.sent;_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,7]]);};return React.createElement(React.Fragment,null,React.createElement(Button,{variant:\"primary\",onClick:handleShow},\"Withdraw\"),React.createElement(Modal,{show:show,onHide:handleClose},React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,null,props.name)),React.createElement(Modal.Body,null,React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"exampleForm.ControlSelect1\"},React.createElement(Form.Label,null,\"Amount To Withdraw\"),React.createElement(Form.Control,{onChange:AmountValue,as:\"select\"},items.map(function(item,key){return React.createElement(\"option\",null,item);}))))),React.createElement(Modal.Footer,null,React.createElement(Button,{variant:\"secondary\",onClick:handleClose},\"Close\"),React.createElement(Button,{type:\"submit\",variant:\"primary\",onClick:handleAdd},\"Withdraw Amount\"))));}export default WithdrawAmountModal;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/WithdrawAmountModal.js"],"names":["React","useState","useEffect","Modal","Button","Form","WithdrawAmountModal","props","show","setShow","items","setItems","amount","setAmount","handleClose","handleShow","AmountValue","e","target","value","itemsToAdd","i","min","max","push","handleAdd","event","preventDefault","UpdateAmount","refresh","data","name","fetch","method","body","JSON","stringify","mode","headers","response","map","item","key"],"mappings":"iQAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,KAAR,CAAcC,MAAd,CAAqBC,IAArB,KAAgC,iBAAhC,CAEA,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,eAEVN,QAAQ,CAAC,KAAD,CAFE,wCAE3BO,IAF2B,eAErBC,OAFqB,8BAGRR,QAAQ,CAAC,EAAD,CAHA,yCAG3BS,KAH2B,eAGpBC,QAHoB,8BAINV,QAAQ,CAAC,IAAD,CAJF,yCAI3BW,MAJ2B,eAInBC,SAJmB,eAMlC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAML,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,CACA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMN,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAnB,CACA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,QAAOJ,CAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAApB,CAGAjB,SAAS,CAAC,UAAI,CACZ,GAAMkB,CAAAA,UAAU,CAAC,EAAjB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAACd,KAAK,CAACe,GAAjB,CAAqBD,CAAC,EAAEd,KAAK,CAACgB,GAA9B,CAAkCF,CAAC,CAACA,CAAC,CAACd,KAAK,CAACe,GAA5C,CAAgD,CAC9CF,UAAU,CAACI,IAAX,CAAgBH,CAAhB,EACD,CACDV,QAAQ,CAACS,UAAD,CAAR,CACD,CANQ,CAMP,CAACb,KAAK,CAACgB,GAAP,CAAWhB,KAAK,CAACe,GAAjB,CANO,CAAT,CAQA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3BA,KAAK,CAACC,cAAN,GACAlB,OAAO,CAAC,KAAD,CAAP,CACAmB,YAAY,GACZrB,KAAK,CAACsB,OAAN,GACD,CALD,CAOA,GAAMD,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,2JAEXE,IAFW,CAEJ,CAAC,WAAWvB,KAAK,CAACwB,IAAlB,CAAuB,SAAS,CAACnB,MAAM,CAANA,MAAD,EAASA,MAAzC,CAAgD,SAAS,UAAzD,CAFI,kDAGMoB,KAAK,CAAC,oCAAD,CAAuC,CACjEC,MAAM,CAAE,MADyD,CACjD;AAChBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF2D,CAErC;AAC5BO,IAAI,CAAC,SAH4D,CAIjEC,OAAO,CAAE,CACP,eAAgB,kBADT,CAJwD,CAAvC,CAHX,SAGXC,QAHW,6JAArB,CAmBA,MACE,yCACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAExB,UAAnC,aADF,CAKE,oBAAC,KAAD,EAAO,IAAI,CAAEP,IAAb,CAAmB,MAAM,CAAEM,WAA3B,EACE,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,EACE,oBAAC,KAAD,CAAO,KAAP,MAAcP,KAAK,CAACwB,IAApB,CADF,CADF,CAIE,oBAAC,KAAD,CAAO,IAAP,MACA,oBAAC,IAAD,MACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,4BAAtB,EACE,oBAAC,IAAD,CAAM,KAAN,2BADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAe,QAAQ,CAAIf,WAA3B,CAAwC,EAAE,CAAC,QAA3C,EACGN,KAAK,CAAC8B,GAAN,CAAU,SAACC,IAAD,CAAMC,GAAN,QACT,mCAASD,IAAT,CADS,EAAV,CADH,CAFF,CADF,CADA,CAJF,CAiBE,oBAAC,KAAD,CAAO,MAAP,MACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE3B,WAArC,UADF,CAIE,oBAAC,MAAD,EAAQ,IAAI,CAAG,QAAf,CAAwB,OAAO,CAAC,SAAhC,CAA0C,OAAO,CAAEW,SAAnD,oBAJF,CAjBF,CALF,CADF,CAkCD,CAGD,cAAenB,CAAAA,mBAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button,Form} from 'react-bootstrap'\n\nfunction WithdrawAmountModal(props) {\n  \n  const [show, setShow] = useState(false);\n  const [items, setItems] = useState([]);\n  const [amount, setAmount] = useState(5000);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const AmountValue = (e) => setAmount(e.target.value);\n\n  \n  useEffect(()=>{\n    const itemsToAdd=[]\n    for (var i=props.min;i<=props.max;i=i+props.min){\n      itemsToAdd.push(i)\n    }\n    setItems(itemsToAdd)\n  },[props.max,props.min]);\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    setShow(false)\n    UpdateAmount();\n    props.refresh()\n  }\n\n  const UpdateAmount = async() => {\n    try {\n      const data = {\"algoname\":props.name,\"amount\":{amount}.amount,\"action\":\"withdraw\"}\n      const response = await fetch('http://localhost:5000/updateAmount', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        mode:'no-cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //const json = await response.json();\n      //console.log('Success:', JSON.stringify(json));\n    } catch (error) {\n      //console.error('Error:', error);\n    }\n  }\n  \n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Withdraw\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Amount To Withdraw</Form.Label>\n            <Form.Control  onChange = {AmountValue} as=\"select\">\n              {items.map((item,key)=>(\n                <option>{item}</option>\n              ))}\n              \n            </Form.Control>\n          </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button type = \"submit\" variant=\"primary\" onClick={handleAdd}>\n            Withdraw Amount\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport default WithdrawAmountModal;\n"]},"metadata":{},"sourceType":"module"}