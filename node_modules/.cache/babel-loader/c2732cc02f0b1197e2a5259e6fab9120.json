{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction CurrentAlgos(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentAlgos = _useState2[0],\n        setCurrentAlgos = _useState2[1];\n\n  useEffect(() => {\n    const data = {\n      \"userid\": props.userid\n    };\n\n    async function FetchAlgos() {\n      await fetch(config.apiGateway.URL + \"/getalgos\", {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"Fetching Client Algos API\");\n        console.log(data);\n        setCurrentAlgos(data);\n      });\n    }\n\n    FetchAlgos();\n  }, [props.userid]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Amount Allocated\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Profit/Loss\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, currentAlgos.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, USDFormat(item.amount)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, USDFormat(item.pnl)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AddAmountModal, {\n    userid: props.userid,\n    name: item.name,\n    min: 5000,\n    max: props.summary.amountfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(WithdrawAmountModal, {\n    userid: props.userid,\n    name: item.name,\n    min: 5000,\n    max: item.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(AlgoDetailsModal, {\n    name: item.name,\n    userid: props.userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))))))));\n}\n\nexport default CurrentAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js"],"names":["React","useState","useEffect","Table","Row","Col","AddAmountModal","WithdrawAmountModal","AlgoDetailsModal","USDFormat","config","CurrentAlgos","props","currentAlgos","setCurrentAlgos","data","userid","FetchAlgos","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","map","item","key","name","amount","pnl","summary","amountfree"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Table,Row,Col} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { USDFormat } from '../libs/numberFormat';\nimport config from '../config';\n\nfunction CurrentAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n\n  \n\n  useEffect(()=>{\n    const data = {\"userid\":props.userid}\n    async function FetchAlgos(){\n      await fetch(config.apiGateway.URL+\"/getalgos\", {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(\"Fetching Client Algos API\")\n        console.log(data)\n        setCurrentAlgos(data)\n      })\n    }\n    FetchAlgos()\n  },[props.userid]);\n\n  \n  \n  return (\n    \n    <div>\n        \n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Amount Allocated</th>\n              <th>Profit/Loss</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{USDFormat(item.amount)}</td>\n                  <td>{USDFormat(item.pnl)}</td>\n                  <Row>\n                  <Col>\n                  <AddAmountModal userid={props.userid} name={item.name}  min={5000} max={props.summary.amountfree}/>\n                  </Col>  \n                  <Col>\n                  <WithdrawAmountModal userid={props.userid} name={item.name}  min={5000} max={item.amount}/>\n                  </Col>\n                  <Col>\n                  <AlgoDetailsModal name={item.name} userid={props.userid} />\n                  </Col>\n                  </Row>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default CurrentAlgos;\n"]},"metadata":{},"sourceType":"module"}