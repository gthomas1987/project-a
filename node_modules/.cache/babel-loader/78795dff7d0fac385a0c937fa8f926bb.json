{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/NPVChart.js\";\nimport React, { useEffect, useState } from 'react'; //import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction NPVChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    setOptions({\n      dataLabels: {\n        enabled: false\n      },\n      chart: {\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        }\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            //return new Date() // The formatter function overrides format property\n            const formattedDate = new Date(timestamp).toDateString(); // The above yields e.g. 'Mon Jan 06 2020'\n\n            const _formattedDate$split = formattedDate.split(' '),\n                  _formattedDate$split2 = _slicedToArray(_formattedDate$split, 4),\n                  month = _formattedDate$split2[1],\n                  day = _formattedDate$split2[2],\n                  year = _formattedDate$split2[3];\n\n            return [month, year].join('-');\n          }\n        }\n      }\n    });\n    setSeries([{\n      name: \"PNL\",\n      data: props.npvChart\n    }]);\n  }, [props.npvChart]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))));\n}\n\nexport default NPVChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/NPVChart.js"],"names":["React","useEffect","useState","Chart","NPVChart","props","options","setOptions","series","setSeries","dataLabels","enabled","chart","zoom","type","autoScaleYaxis","zoomedArea","fill","color","opacity","stroke","width","xaxis","labels","formatter","value","timestamp","formattedDate","Date","toDateString","split","month","day","year","join","name","data","npvChart"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA,oBAEOH,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEfI,OAFe;AAAA,QAEPC,UAFO;;AAAA,qBAGKL,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,QAGfM,MAHe;AAAA,QAGRC,SAHQ;;AAKtBR,EAAAA,SAAS,CAAC,MAAI;AAGZM,IAAAA,UAAU,CAAC;AACTG,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OADH;AAITC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AACFF,UAAAA,OAAO,EAAE,IADP;AAEFG,UAAAA,IAAI,EAAE,GAFJ;AAGFC,UAAAA,cAAc,EAAE,KAHd;AAIFC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AACJC,cAAAA,KAAK,EAAE,SADH;AAEJC,cAAAA,OAAO,EAAE;AAFL,aADI;AAKVC,YAAAA,MAAM,EAAE;AACNF,cAAAA,KAAK,EAAE,SADD;AAENC,cAAAA,OAAO,EAAE,GAFH;AAGNE,cAAAA,KAAK,EAAE;AAHD;AALE;AAJV;AADD,OAJE;AAsBTC,MAAAA,KAAK,EAAC;AACJR,QAAAA,IAAI,EAAE,UADF;AAEJS,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;AACrC;AACA,kBAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,SAAT,EAAoBG,YAApB,EAAtB,CAFqC,CAGrC;;AAHqC,yCAKRF,aAAa,CAACG,KAAd,CAAoB,GAApB,CALQ;AAAA;AAAA,kBAK5BC,KAL4B;AAAA,kBAKrBC,GALqB;AAAA,kBAKhBC,IALgB;;AAMrC,mBAAO,CAACF,KAAD,EAAQE,IAAR,EAAcC,IAAd,CAAmB,GAAnB,CAAP;AACD;AARK;AAFJ;AAtBG,KAAD,CAAV;AAoCAzB,IAAAA,SAAS,CAAC,CACR;AACE0B,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,IAAI,EAAE/B,KAAK,CAACgC;AAFd,KADQ,CAAD,CAAT;AAMD,GA7CQ,EA6CP,CAAChC,KAAK,CAACgC,QAAP,CA7CO,CAAT;AAmDE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE/B,OADX;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD;;AAGH,eAAeJ,QAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\n//import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction NPVChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    \n    \n    setOptions({\n      dataLabels: {\n        enabled: false\n      },\n      chart: {\n        zoom: {\n            enabled: true,\n            type: 'x',  \n            autoScaleYaxis: false,  \n            zoomedArea: {\n              fill: {\n                color: '#90CAF9',\n                opacity: 0.4\n              },\n              stroke: {\n                color: '#0D47A1',\n                opacity: 0.4,\n                width: 1\n              }\n            }\n        }\n      },\n      xaxis:{\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            //return new Date() // The formatter function overrides format property\n            const formattedDate = new Date(timestamp).toDateString()\n            // The above yields e.g. 'Mon Jan 06 2020'\n\n            const [, month, day, year] = formattedDate.split(' ')\n            return [month, year].join('-')\n          }, \n        }\n      }\n      })\n    setSeries([\n      {\n        name: \"PNL\",\n        data: props.npvChart\n      }\n    ])\n  },[props.npvChart]);\n\n\n\n\n  \n    return (\n      <div >\n        <div >\n          <div >\n            <Chart\n              options={options}\n              series={series}\n              type=\"line\"\n              height=\"400\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default NPVChart;\n"]},"metadata":{},"sourceType":"module"}