{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/BackTestChart.js\";\nimport React, { useEffect, useState } from 'react'; //import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    setOptions({\n      dataLabels: {\n        enabled: false\n      },\n      chart: {\n        foreColor: '#ffffff',\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        }\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            return new Date(timestamp); // The formatter function overrides format property\n          }\n        }\n      },\n      yaxis: [{\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: \"#FF1654\"\n        },\n        labels: {\n          style: {\n            color: \"#FF1654\"\n          }\n        },\n        title: {\n          text: \"Series A\"\n        }\n      }, {\n        opposite: true,\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: \"#247BA0\"\n        },\n        labels: {\n          style: {\n            color: \"#247BA0\"\n          }\n        },\n        title: {\n          text: \"Series B\"\n        }\n      }]\n    });\n    setSeries([{\n      name: \"PNL\",\n      data: props.pnlchart\n    }, {\n      name: \"Diff\",\n      data: props.diffchart\n    }]);\n  }, [props.pnlchart, props.diffchart]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    width: \"100%\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))));\n}\n\nexport default AlgoPNLChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/BackTestChart.js"],"names":["React","useEffect","useState","Chart","AlgoPNLChart","props","options","setOptions","series","setSeries","dataLabels","enabled","chart","foreColor","zoom","type","autoScaleYaxis","zoomedArea","fill","color","opacity","stroke","width","xaxis","labels","formatter","value","timestamp","Date","yaxis","axisTicks","show","axisBorder","style","title","text","opposite","name","data","pnlchart","diffchart"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\n//import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    \n    setOptions({\n      dataLabels: {\n        enabled: false\n      },\n      chart: {\n        foreColor: '#ffffff',\n        zoom: {\n            enabled: true,\n            type: 'x',  \n            autoScaleYaxis: false,  \n            zoomedArea: {\n              fill: {\n                color: '#90CAF9',\n                opacity: 0.4\n              },\n              stroke: {\n                color: '#0D47A1',\n                opacity: 0.4,\n                width: 1\n              }\n            }\n        }\n      },\n      xaxis:{\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            return new Date(timestamp) // The formatter function overrides format property\n          }, \n        }\n      },\n      yaxis: [\n        {\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: \"#FF1654\"\n          },\n          labels: {\n            style: {\n              color: \"#FF1654\"\n            }\n          },\n          title: {\n            text: \"Series A\"\n          }\n        },\n        {\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: \"#247BA0\"\n          },\n          labels: {\n            style: {\n              color: \"#247BA0\"\n            }\n          },\n          title: {\n            text: \"Series B\"\n          }\n        }\n      ],\n\n      })\n    setSeries([\n      {\n        name: \"PNL\",\n        data: props.pnlchart\n      },\n      {\n        name: \"Diff\",\n        data: props.diffchart\n      }\n    ])\n  },[props.pnlchart,props.diffchart]);\n\n\n  \n    return (\n      <div className=\"app\">\n        <div >\n          <div className=\"mixed-chart\">\n            <Chart\n              options={options}\n              series={series}\n              type=\"line\"\n              width=\"100%\"\n              height=\"400\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default AlgoPNLChart;\n"]},"metadata":{},"sourceType":"module"}