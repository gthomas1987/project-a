{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/PositionChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport ApexCharts from 'apexcharts';\nimport Chart from \"react-apexcharts\";\n\nfunction PositionChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    setOptions({\n      annotations: {\n        yaxis: [{\n          y: 8200,\n          borderColor: \"#00E396\",\n          label: {\n            borderColor: \"#00E396\",\n            style: {\n              color: \"#fff\",\n              background: \"#00E396\"\n            },\n            text: \"Y Axis Annotation\"\n          }\n        }],\n        xaxis: [{\n          // in a datetime series, the x value should be a timestamp, just like it is generated below\n          x: new Date(\"11/17/2017\").getTime(),\n          strokeDashArray: 0,\n          borderColor: \"#775DD0\",\n          label: {\n            borderColor: \"#775DD0\",\n            style: {\n              color: \"#fff\",\n              background: \"#775DD0\"\n            },\n            text: \"X Axis Anno Vertical\"\n          }\n        }, {\n          x: new Date(\"03 Dec 2017\").getTime(),\n          borderColor: \"#FEB019\",\n          label: {\n            borderColor: \"#FEB019\",\n            style: {\n              color: \"#fff\",\n              background: \"#FEB019\"\n            },\n            orientation: \"horizontal\",\n            text: \"X Axis Anno Horizonal\"\n          }\n        }],\n        points: [{\n          x: new Date(\"27 Nov 2017\").getTime(),\n          y: 8500.9,\n          marker: {\n            size: 6,\n            fillColor: \"#fff\",\n            strokeColor: \"#2698FF\",\n            radius: 2\n          },\n          label: {\n            borderColor: \"#FF4560\",\n            offsetY: 0,\n            style: {\n              color: \"#fff\",\n              background: \"#FF4560\"\n            },\n            text: \"Point Annotation (XY)\"\n          }\n        }]\n      },\n      chart: {\n        height: 380,\n        type: \"line\",\n        id: \"areachart-2\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"straight\"\n      },\n      series: [{\n        data: series.monthDataSeries1.prices\n      }],\n      title: {\n        text: \"Line with Annotations\",\n        align: \"left\"\n      },\n      labels: series.monthDataSeries1.dates,\n      xaxis: {\n        type: \"datetime\"\n      }\n    });\n    setSeries([{\n      name: \"NPV\",\n      data: props.y\n    }]);\n  }, [props.x, props.y]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    width: \"500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))));\n}\n\nexport default PositionChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/PositionChart.js"],"names":["React","useEffect","useState","ApexCharts","Chart","PositionChart","props","options","setOptions","series","setSeries","annotations","yaxis","y","borderColor","label","style","color","background","text","xaxis","x","Date","getTime","strokeDashArray","orientation","points","marker","size","fillColor","strokeColor","radius","offsetY","chart","height","type","id","dataLabels","enabled","stroke","curve","data","monthDataSeries1","prices","title","align","labels","dates","name"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction PositionChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    setOptions({\n      annotations: {\n        yaxis: [\n          {\n            y: 8200,\n            borderColor: \"#00E396\",\n            label: {\n              borderColor: \"#00E396\",\n              style: {\n                color: \"#fff\",\n                background: \"#00E396\"\n              },\n              text: \"Y Axis Annotation\"\n            }\n          }\n        ],\n        xaxis: [\n          {\n            // in a datetime series, the x value should be a timestamp, just like it is generated below\n            x: new Date(\"11/17/2017\").getTime(),\n            strokeDashArray: 0,\n            borderColor: \"#775DD0\",\n            label: {\n              borderColor: \"#775DD0\",\n              style: {\n                color: \"#fff\",\n                background: \"#775DD0\"\n              },\n              text: \"X Axis Anno Vertical\"\n            }\n          },\n          {\n            x: new Date(\"03 Dec 2017\").getTime(),\n            borderColor: \"#FEB019\",\n            label: {\n              borderColor: \"#FEB019\",\n              style: {\n                color: \"#fff\",\n                background: \"#FEB019\"\n              },\n              orientation: \"horizontal\",\n              text: \"X Axis Anno Horizonal\"\n            }\n          }\n        ],\n        points: [\n          {\n            x: new Date(\"27 Nov 2017\").getTime(),\n            y: 8500.9,\n            marker: {\n              size: 6,\n              fillColor: \"#fff\",\n              strokeColor: \"#2698FF\",\n              radius: 2\n            },\n            label: {\n              borderColor: \"#FF4560\",\n              offsetY: 0,\n              style: {\n                color: \"#fff\",\n                background: \"#FF4560\"\n              },\n    \n              text: \"Point Annotation (XY)\"\n            }\n          }\n        ]\n      },\n      chart: {\n        height: 380,\n        type: \"line\",\n        id: \"areachart-2\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"straight\"\n      },\n      series: [\n        {\n          data: series.monthDataSeries1.prices\n        }\n      ],\n      title: {\n        text: \"Line with Annotations\",\n        align: \"left\"\n      },\n      labels: series.monthDataSeries1.dates,\n      xaxis: {\n        type: \"datetime\"\n      }\n    }\n      )\n      setSeries([\n        {\n          name: \"NPV\",\n          data: props.y\n        }])\n  },[props.x,props.y]);\n\n\n  \n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={options}\n              series={series}\n              type=\"line\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default PositionChart;\n"]},"metadata":{},"sourceType":"module"}