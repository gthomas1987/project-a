{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Container, Row } from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { numberFormat } from './numberFormat';\n\nfunction CurrentAlgos(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentAlgos = _useState2[0],\n        setCurrentAlgos = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refresh = _useState4[0],\n        setRefresh = _useState4[1];\n\n  const handleRefresh = () => {\n    setRefresh(!{\n      refresh\n    }.refresh);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [refresh]);\n\n  const fetchData = async () => {\n    console.log(\"fetching algos\");\n    fetch('http://localhost:5000/getalgos').then(response => response.json()).then(data => {\n      console.log(data);\n      setCurrentAlgos(data);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Margin Used\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Amount Allocated\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Profit/Loss\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"-\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, currentAlgos.map((item, key) => React.createElement(\"tr\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, item.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, item.margin), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item.amount), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"numberFormat(\", item.pnl, \")\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(AddAmountModal, {\n    name: item.name,\n    refresh: handleRefresh,\n    min: 5000,\n    max: props.summary.marginfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(WithdrawAmountModal, {\n    name: item.name,\n    refresh: handleRefresh,\n    min: 5000,\n    max: item.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(AlgoDetailsModal, {\n    name: item.name,\n    refresh: handleRefresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))))));\n}\n\nexport default CurrentAlgos;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/CurrentAlgos.js"],"names":["React","useState","useEffect","Table","Container","Row","AddAmountModal","WithdrawAmountModal","AlgoDetailsModal","numberFormat","CurrentAlgos","props","currentAlgos","setCurrentAlgos","refresh","setRefresh","handleRefresh","fetchData","console","log","fetch","then","response","json","data","map","item","key","name","margin","amount","pnl","summary","marginfree"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Table,Container,Row} from 'react-bootstrap';\nimport AddAmountModal from './AddAmountModal';\nimport WithdrawAmountModal from './WithdrawAmountModal';\nimport AlgoDetailsModal from './AlgoDetailsModal';\nimport { numberFormat } from './numberFormat';\n\nfunction CurrentAlgos(props) {\n  const [currentAlgos,setCurrentAlgos] = useState([]);\n  const [refresh,setRefresh] = useState(false);\n\n  const handleRefresh = () => {\n    setRefresh(!{refresh}.refresh);\n  }\n\n  useEffect(()=>{\n    fetchData();\n  },[refresh]);\n\n  const fetchData = async() => {\n    console.log(\"fetching algos\")\n    fetch('http://localhost:5000/getalgos')\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(data)\n        setCurrentAlgos(data)\n      })\n  }\n\n  \n  return (\n    \n    <div>\n        \n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Margin Used</th>\n              <th>Amount Allocated</th>\n              <th>Profit/Loss</th>\n              <th>-</th>\n              <th>-</th>\n              <th>-</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              {currentAlgos.map((item,key)=>(\n                <tr key ={key}>\n                  <td>{item.name}</td>\n                  <td>{item.margin}</td>\n                  <td>{item.amount}</td>\n                  <td>numberFormat({item.pnl})</td>\n                  <td>\n                    \n                    <AddAmountModal name={item.name} refresh ={handleRefresh} min={5000} max={props.summary.marginfree}/>\n                  </td> \n                  <td>\n                    <WithdrawAmountModal name={item.name} refresh ={handleRefresh} min={5000} max={item.amount}/>\n                    \n                  </td>\n                  <td>\n                  <AlgoDetailsModal name={item.name} refresh ={handleRefresh} />\n                  </td>\n                </tr>\n                ))}\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default CurrentAlgos;\n"]},"metadata":{},"sourceType":"module"}