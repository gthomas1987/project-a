{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgoDetailsModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nfunction AlgoDetailsModal(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItems = _useState4[1];\n\n  const _useState5 = useState(5000),\n        _useState6 = _slicedToArray(_useState5, 2),\n        amount = _useState6[0],\n        setAmount = _useState6[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const AmountValue = e => setAmount(e.target.value);\n\n  useEffect(() => {\n    const itemsToAdd = [];\n\n    for (var i = props.min; i <= props.max; i = i + props.min) {\n      itemsToAdd.push(i);\n    }\n\n    setItems(itemsToAdd);\n  }, [props.max, props.min]);\n\n  const handleAdd = event => {\n    event.preventDefault();\n    setShow(false);\n    UpdateAmount();\n    props.refresh();\n  };\n\n  const UpdateAmount = async () => {\n    try {\n      const data = {\n        \"algoname\": props.name,\n        \"amount\": {\n          amount\n        }.amount,\n        \"action\": \"add\"\n      };\n      const response = await fetch('http://localhost:5000/updateAmount', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        mode: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); //const json = await response.json();\n      //console.log('Success:', JSON.stringify(json));\n    } catch (error) {//console.error('Error:', error);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Add\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Close\")))));\n}\n\nexport default AlgoDetailsModal;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgoDetailsModal.js"],"names":["React","useState","useEffect","Modal","Button","Form","AlgoDetailsModal","props","show","setShow","items","setItems","amount","setAmount","handleClose","handleShow","AmountValue","e","target","value","itemsToAdd","i","min","max","push","handleAdd","event","preventDefault","UpdateAmount","refresh","data","name","response","fetch","method","body","JSON","stringify","mode","headers","error"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button,Form} from 'react-bootstrap'\n\nfunction AlgoDetailsModal(props) {\n  \n  const [show, setShow] = useState(false);\n  const [items, setItems] = useState([]);\n  const [amount, setAmount] = useState(5000);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const AmountValue = (e) => setAmount(e.target.value);\n\n  useEffect(()=>{\n    const itemsToAdd=[]\n    for (var i=props.min;i<=props.max;i=i+props.min){\n      itemsToAdd.push(i)\n    }\n    setItems(itemsToAdd)\n  },[props.max,props.min]);\n  \n  const handleAdd = (event) => {\n    event.preventDefault();\n    setShow(false)\n    UpdateAmount();\n    props.refresh()\n  }\n\n  const UpdateAmount = async() => {\n    try {\n      const data = {\"algoname\":props.name,\"amount\":{amount}.amount,\"action\":\"add\"}\n      const response = await fetch('http://localhost:5000/updateAmount', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        mode:'no-cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      //const json = await response.json();\n      //console.log('Success:', JSON.stringify(json));\n    } catch (error) {\n      //console.error('Error:', error);\n    }\n  }\n  \n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add\n      </Button>\n      <Form>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n          \n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Form>\n    </>\n  );\n}\n\n\nexport default AlgoDetailsModal;\n"]},"metadata":{},"sourceType":"module"}