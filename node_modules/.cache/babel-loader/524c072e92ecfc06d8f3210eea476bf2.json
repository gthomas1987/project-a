{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { Card, Form, Container, Row, Col } from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\nimport { Link } from 'react-router-dom';\nimport ConfirmationForm from \"./ConfirmationForm\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nfunction Login(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"Live\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        accountType = _useState6[0],\n        setAccountType = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLoading = _useState8[0],\n        setIsLoading = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        unconfirmedUser = _useState10[0],\n        setUnconfirmedUser = _useState10[1];\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleAccountChange(event) {\n    if (event.target.value === \"Live\") {\n      setAccountType(\"Paper\");\n    } else {\n      setAccountType(\"Live\");\n    }\n  }\n\n  function handleConfirm() {\n    setUnconfirmedUser(null);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(email, password);\n      props.userHasAuthenticated(true);\n      sessionStorage.setItem(\"email\", email);\n      sessionStorage.setItem(\"accounttype\", accountType);\n      setIsLoading(false);\n      props.history.push({\n        pathname: \"/dashboard\"\n      });\n    } catch (e) {\n      if (e.name === 'UserNotConfirmedException') {\n        alert(\"You are not verified. Resending the verification code to \" + email);\n        await Auth.resendSignUp(email);\n        setUnconfirmedUser(email);\n        setIsLoading(false);\n      } else {\n        alert(e.message);\n        setIsLoading(false);\n      }\n    }\n  }\n\n  function renderForm() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"auto\",\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: \"auto\",\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: \"dark\",\n      text: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      autoFocus: true,\n      value: email,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      value: password,\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formAccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      value: accountType,\n      type: \"checkbox\",\n      label: \"Paper Account\",\n      onChange: handleAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/login/reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Forgot password?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bssize: \"large\",\n      variant: \"primary\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Log In\")))), React.createElement(Col, {\n      md: \"auto\",\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, unconfirmedUser === null ? renderForm() : React.createElement(ConfirmationForm, {\n    email: email,\n    confirmed: handleConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Login.js"],"names":["React","useState","Card","Form","Container","Row","Col","Auth","Link","ConfirmationForm","LoaderButton","Login","props","email","setEmail","password","setPassword","accountType","setAccountType","isLoading","setIsLoading","unconfirmedUser","setUnconfirmedUser","validateForm","length","handleAccountChange","event","target","value","handleConfirm","handleSubmit","preventDefault","signIn","userHasAuthenticated","sessionStorage","setItem","history","push","pathname","e","name","alert","resendSignUp","message","renderForm"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {Card,Form,Container,Row,Col} from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\nimport {Link} from 'react-router-dom';\nimport ConfirmationForm from \"./ConfirmationForm\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nfunction Login(props) {\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [accountType,setAccountType] = useState(\"Live\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [unconfirmedUser, setUnconfirmedUser] = useState(null);\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleAccountChange(event){\n    if(event.target.value===\"Live\"){\n      setAccountType(\"Paper\")\n    }\n    else{\n      setAccountType(\"Live\")\n    }\n  }\n\n  function handleConfirm(){\n    setUnconfirmedUser(null)\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.signIn(email, password);\n      props.userHasAuthenticated(true);\n      sessionStorage.setItem(\"email\",email)\n      sessionStorage.setItem(\"accounttype\",accountType)\n      setIsLoading(false);\n      props.history.push({pathname:\"/dashboard\"});\n    } catch (e) {\n      if(e.name === 'UserNotConfirmedException') {\n        alert(\"You are not verified. Resending the verification code to \" + email);\n        await Auth.resendSignUp(email);\n        setUnconfirmedUser(email)\n        setIsLoading(false);\n      } else {\n          alert(e.message);\n          setIsLoading(false);\n      }\n    }\n  }\n  \n  function renderForm(){\n    return (\n    <Container>\n      <br></br>\n      <Row>\n        \n        <Col md=\"auto\" lg=\"4\" ></Col>\n        <Col md=\"auto\" lg=\"4\" >\n        <Card bg=\"dark\" text=\"white\" >\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\"  >\n              <Form.Label>Email</Form.Label>\n              <Form.Control autoFocus value={email} type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)}/>\n              \n            </Form.Group>\n\n            <Form.Group  controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control value={password} type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group  controlId=\"formAccountType\">\n            <Form.Check value={accountType} type=\"checkbox\" label=\"Paper Account\" onChange={handleAccountChange} />\n            </Form.Group>\n\n            \n            <Link to=\"/login/reset\">Forgot password?</Link>\n            \n            <br></br>\n            <br></br>\n            \n            <LoaderButton\n              block\n              type=\"submit\"\n              bssize=\"large\"\n              variant=\"primary\"\n              isLoading={isLoading}\n              disabled={!validateForm()}\n              >\n              Log In\n              </LoaderButton>\n          </Form>\n\n          </Card>\n        </Col>\n        <Col md=\"auto\" lg=\"4\" ></Col>\n        \n      </Row>\n    </Container>\n    )\n  }\n\n  \n  return (\n    <div className=\"Signup\">\n    {unconfirmedUser === null ? renderForm() : <ConfirmationForm email={email} confirmed={handleConfirm}/> }\n    <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n   <br></br>\n    </div>\n   \n   \n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}