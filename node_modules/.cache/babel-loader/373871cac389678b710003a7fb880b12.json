{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AddAmountModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nfunction AddAmountModal(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        items = _useState4[0],\n        setItems = _useState4[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    const itemsToAdd = [];\n\n    for (var i = props.min; i <= props.max; i = i + props.min) {\n      itemsToAdd.push(i);\n    }\n\n    setItems(itemsToAdd);\n  }, [props.max, props.min]);\n\n  const handleAdd = event => {\n    //event.preventDefault();\n    UpdateAmount();\n  };\n\n  const UpdateAmount = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/updateAmount', {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      console.log('Success:', JSON.stringify(json));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Add\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Amount To Add\"), React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, items.map((item, key) => React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, item)))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Add Amount\"))));\n}\n\nexport default AddAmountModal;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AddAmountModal.js"],"names":["React","useState","useEffect","Modal","Button","Form","AddAmountModal","props","show","setShow","items","setItems","handleClose","handleShow","itemsToAdd","i","min","max","push","handleAdd","event","UpdateAmount","response","fetch","method","body","JSON","stringify","data","headers","json","console","log","error","name","map","item","key"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button,Form} from 'react-bootstrap'\n\nfunction AddAmountModal(props) {\n  \n  const [show, setShow] = useState(false);\n  const [items, setItems] = useState([]);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(()=>{\n    const itemsToAdd=[]\n    for (var i=props.min;i<=props.max;i=i+props.min){\n      itemsToAdd.push(i)\n    }\n    setItems(itemsToAdd)\n  },[props.max,props.min]);\n  \n  const handleAdd = (event) => {\n    //event.preventDefault();\n    UpdateAmount();\n  }\n\n  const UpdateAmount = async() => {\n    try {\n      const response = await fetch('http://localhost:5000/updateAmount', {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      console.log('Success:', JSON.stringify(json));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  \n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Amount To Add</Form.Label>\n            <Form.Control as=\"select\">\n              {items.map((item,key)=>(\n                <option>{item}</option>\n              ))}\n              \n            </Form.Control>\n          </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleAdd}>\n            Add Amount\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport default AddAmountModal;\n"]},"metadata":{},"sourceType":"module"}