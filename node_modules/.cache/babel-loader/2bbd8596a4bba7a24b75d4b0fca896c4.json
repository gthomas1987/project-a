{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport CurrentAlgos from './CurrentAlgos';\nimport AllAlgos from './AllAlgos';\nimport { Auth } from \"aws-amplify\";\n\nfunction Dashboard(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        npvChart = _useState2[0],\n        setNpvChart = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userid = _useState4[0],\n        setUserid = _useState4[1];\n\n  async function onLoad() {\n    await Auth.currentAuthenticatedUser({\n      bypassCache: false // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n\n    }).then(user => setUserid(user.username)).catch(err => console.log(err));\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [userid]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    userid: userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Algos\")), React.createElement(Col, {\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(AllAlgos, {\n    userid: userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CurrentAlgos, {\n    summary: summary,\n    userid: userid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Container","Row","Col","Accordion","Button","Card","CurrentAlgos","AllAlgos","Auth","Dashboard","props","npvChart","setNpvChart","userid","setUserid","onLoad","currentAuthenticatedUser","bypassCache","then","user","username","catch","err","console","log","summary"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAwD,iBAAxD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,IAAT,QAAqB,aAArB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,oBACOZ,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACjBa,QADiB;AAAA,QACRC,WADQ;;AAAA,qBAEGd,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEjBe,MAFiB;AAAA,QAEVC,SAFU;;AAMxB,iBAAeC,MAAf,GAAuB;AACrB,UAAMP,IAAI,CAACQ,wBAAL,CAA8B;AAClCC,MAAAA,WAAW,EAAE,KADqB,CACd;;AADc,KAA9B,EAGLC,IAHK,CAGAC,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACC,QAAN,CAHjB,EAILC,KAJK,CAICC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJR,CAAN;AAKD;;AAIDvB,EAAAA,SAAS,CAAC,MAAI;AAEZgB,IAAAA,MAAM;AAEP,GAJQ,EAIP,CAACF,MAAD,CAJO,CAAT;AAOA,SAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADF,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAET,MAAtB;AAA8B,IAAA,OAAO,EAAC,MAAtC;AAA6C,IAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CADA,EAMA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAW,IAAA,MAAM,EAAES,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANA,CADF,CADF,EAaE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEY,OAAvB;AAAgC,IAAA,MAAM,EAAEZ,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADF,CAbF,CADF,CATF,CAFF;AAgCD;;AAED,eAAeJ,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\n\nimport CurrentAlgos from './CurrentAlgos'\nimport AllAlgos from './AllAlgos'\n\nimport { Auth } from \"aws-amplify\";\n\nfunction Dashboard(props) {\n  const [npvChart,setNpvChart] = useState([]);\n  const [userid,setUserid] = useState(\"\");\n\n  \n\n  async function onLoad(){\n    await Auth.currentAuthenticatedUser({\n      bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n    })\n    .then(user => setUserid(user.username))\n    .catch(err => console.log(err));\n  }\n\n  \n  \n  useEffect(()=>{\n    \n    onLoad();\n    \n  },[userid]);\n\n  \n  return (\n    \n    <Container>\n      <br></br>\n      <br></br>\n      <Row>\n        <Col><Summary userid={userid} /></Col>\n        \n        \n      </Row>\n      <br></br>\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            <Row>\n            <Col sm={10}>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Algos\n            </Accordion.Toggle>\n            </Col>\n            <Col sm={2}>\n            <AllAlgos  userid={userid} />\n            </Col>\n            </Row>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body><CurrentAlgos summary={summary} userid={userid} /></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}