{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Summary.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { USDFormat } from '../libs/numberFormat';\nimport { Deposit } from './Deposit';\nimport { Withdraw } from './Withdraw';\nimport config from '../config';\n\nfunction Summary(props) {\n  const _useState = useState(0.0),\n        _useState2 = _slicedToArray(_useState, 2),\n        pnl = _useState2[0],\n        setPnl = _useState2[1];\n\n  const _useState3 = useState(0.0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        npv = _useState4[0],\n        setNpv = _useState4[1];\n\n  const _useState5 = useState(0.0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cashDep = _useState6[0],\n        setCashDep = _useState6[1];\n\n  const _useState7 = useState(0.0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        amountAlloc = _useState8[0],\n        setAmountAlloc = _useState8[1];\n\n  const _useState9 = useState(\"0%\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        usagePer = _useState10[0],\n        setUsagePer = _useState10[1];\n\n  const _useState11 = useState(0.0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        amountFree = _useState12[0],\n        setAmountFree = _useState12[1];\n\n  useEffect(() => {\n    async function FetchSummary() {\n      const data = {\n        \"userid\": props.userid\n      };\n      await fetch(config.apiGateway.URL + \"/getsummary\", {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(\"Fetching summary API\");\n        console.log(data);\n        setPnl(data.pnl);\n        setNpv(data.npv);\n        setCashDep(data.accountbalance);\n        setAmountAlloc(data.amountallocated);\n        setUsagePer(data.usagelevel);\n        setAmountFree(data.amountfree);\n      }).catch(error => console.log(error));\n    }\n\n    FetchSummary();\n  }, [props.userid]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Profit/Loss\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, USDFormat(pnl))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"NPV\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, USDFormat(npv))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Cash Deposited\\xA0\\xA0\\xA0\", React.createElement(Deposit, {\n    userid: props.userid,\n    min: 5000,\n    max: 50000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, USDFormat(cashDep))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Amount Allocated\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, USDFormat(amountAlloc))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Usage (%)\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, usagePer)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Amount Free\\xA0\\xA0\\xA0\", React.createElement(Withdraw, {\n    userid: props.userid,\n    min: 0,\n    max: props.summary.amountfree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, USDFormat(amountFree))))));\n}\n\nexport default Summary;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Summary.js"],"names":["React","useEffect","useState","Table","USDFormat","Deposit","Withdraw","config","Summary","props","pnl","setPnl","npv","setNpv","cashDep","setCashDep","amountAlloc","setAmountAlloc","usagePer","setUsagePer","amountFree","setAmountFree","FetchSummary","data","userid","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","accountbalance","amountallocated","usagelevel","amountfree","catch","error","summary"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {Table} from 'react-bootstrap';\nimport {USDFormat} from '../libs/numberFormat'\nimport {Deposit} from './Deposit'\nimport {Withdraw} from './Withdraw'\nimport config from '../config';\n\nfunction Summary(props) {\n\n  const [pnl,setPnl] = useState(0.0);\n  const [npv,setNpv] = useState(0.0);\n  const [cashDep,setCashDep] = useState(0.0);\n  const [amountAlloc,setAmountAlloc] = useState(0.0);\n  const [usagePer,setUsagePer] = useState(\"0%\");\n  const [amountFree,setAmountFree] = useState(0.0);\n\n  useEffect(()=>{\n    async function FetchSummary(){\n      const data = {\"userid\":props.userid}\n      await fetch(config.apiGateway.URL+\"/getsummary\", {\n          method: 'POST', // or 'PUT'\n          body: JSON.stringify(data), // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(response=>response.json())\n        .then(data=>{\n          console.log(\"Fetching summary API\")\n          console.log(data)\n          setPnl(data.pnl)\n          setNpv(data.npv)\n          setCashDep(data.accountbalance)\n          setAmountAlloc(data.amountallocated)\n          setUsagePer(data.usagelevel)\n          setAmountFree(data.amountfree)\n\n        })\n        .catch(error=>console.log(error));\n    }\n    FetchSummary();\n  },[props.userid]);\n\n  return (\n    <div>\n        <Table striped bordered hover>\n          <tbody>\n            \n            <tr>\n              <td>Profit/Loss</td>\n              <td>{USDFormat(pnl)}</td>\n            </tr>\n            <tr>\n              <td>NPV</td>\n              <td>{USDFormat(npv)}</td>\n            </tr>\n            <tr>\n              <td>Cash Deposited&nbsp;&nbsp;&nbsp;<Deposit userid={props.userid} min={5000} max={50000}/></td>\n              <td>{USDFormat(cashDep)}</td>\n            </tr>\n            \n            <tr>\n              <td>Amount Allocated</td>\n              <td>{USDFormat(amountAlloc)}</td>\n            </tr>\n            <tr>\n              <td>Usage (%)</td>\n              <td>{usagePer}</td>\n            </tr>\n            <tr>\n              <td>Amount Free&nbsp;&nbsp;&nbsp;<Withdraw userid={props.userid} min={0} max={props.summary.amountfree}/></td>\n              <td>{USDFormat(amountFree)}</td>\n            </tr>\n            \n          </tbody>\n        </Table>\n    </div>\n  );\n}\n\nexport default Summary;\n"]},"metadata":{},"sourceType":"module"}