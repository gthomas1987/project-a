{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routes from \"./Routes\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        userHasAuthenticated = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAuthenticating = _useState4[0],\n        setIsAuthenticating = _useState4[1];\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n  }\n\n  return !isAuthenticating && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    bg: \"light\",\n    variant: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Algo Storm\"), isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    href: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(Nav.Link, {\n    href: \"/algos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Algos\"), React.createElement(Nav.Link, {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"About\")), React.createElement(Nav, {\n    className: \"ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Log Out\"))) : React.createElement(React.Fragment, null, React.createElement(Nav, {\n    className: \"ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(Nav.Link, {\n    href: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Log In\")))), React.createElement(Routes, {\n    appProps: {\n      isAuthenticated,\n      userHasAuthenticated\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/App.js"],"names":["React","useState","useEffect","Routes","Navbar","Nav","Auth","App","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","onLoad","currentSession","e","alert","handleLogout","signOut","withRouter"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,EAAeC,GAAf,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,aAArB;;AAGA,SAASC,GAAT,GAAe;AAAA,oBACmCN,QAAQ,CAAC,KAAD,CAD3C;AAAA;AAAA,QACNO,eADM;AAAA,QACWC,oBADX;;AAAA,qBAEmCR,QAAQ,CAAC,IAAD,CAF3C;AAAA;AAAA,QAENS,gBAFM;AAAA,QAEYC,mBAFZ;;AAIbT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,MAAf,GAAwB;AACtB,QAAI;AACF,YAAMN,IAAI,CAACO,cAAL,EAAN;AACAJ,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAHD,CAIA,OAAMK,CAAN,EAAS;AACP,UAAIA,CAAC,KAAK,iBAAV,EAA6B;AAC3BC,QAAAA,KAAK,CAACD,CAAD,CAAL;AACD;AACF;;AAEDH,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,iBAAeK,YAAf,GAA8B;AAC5B,UAAMV,IAAI,CAACW,OAAL,EAAN;AAEAR,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;;AAED,SACE,CAACC,gBAAD,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEKF,eAAe,GACd,0CACF,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADE,EAMF,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,OAAO,EAAEQ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANE,CADc,GAWd,0CACF,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADE,CAbN,CADF,EAsBE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE;AAAER,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CAFF;AA2BD;;AAED,eAAeS,UAAU,CAACX,GAAD,CAAzB","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Routes from \"./Routes\";\nimport {Navbar,Nav} from 'react-bootstrap';\nimport { Auth } from \"aws-amplify\";\n\n\nfunction App() {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n  }\n\n  return (\n    !isAuthenticating &&\n    <div>\n      <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand>Algo Storm</Navbar.Brand>\n          {isAuthenticated\n          ? <>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n            <Nav.Link href=\"/algos\">Algos</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n          </Nav>\n          <Nav className=\"ml-auto\">\n            <Nav.Link onClick={handleLogout}>Log Out</Nav.Link>\n          </Nav>\n            </>\n          : <>\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"/signup\">Sign up</Nav.Link>\n            <Nav.Link href=\"/login\">Log In</Nav.Link>\n          </Nav>\n          </>\n          }\n        </Navbar>\n      <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}