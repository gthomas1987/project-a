{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport Positions from './Positions';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport PositionChart from './PositionChart';\nimport Summary from './Summary';\nimport CurrentAlgos from './CurrentAlgos';\nimport config from '../config';\n\nfunction Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        summary = _useState2[0],\n        setSummary = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        npvX = _useState4[0],\n        setNpvX = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        npvY = _useState6[0],\n        setNpvY = _useState6[1];\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const data = {\n      \"user\": \"geo\"\n    };\n    console.log(config.apiGateway.URL);\n    fetch(config.apiGateway.URL + \"/getsummary\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"API BEING USED IS:\");\n      console.log(config.apiGateway.URL);\n      setSummary(data);\n      setNpvX(Object.keys(data.npvchart));\n      setNpvY(Object.values(data.npvchart));\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Summary, {\n    summary: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(PositionChart, {\n    x: npvX,\n    y: npvY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Algos\")), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CurrentAlgos, {\n    summary: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Current Positions\")), React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Positions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Trade History\")), React.createElement(Accordion.Collapse, {\n    eventKey: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Positions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Positions","Container","Row","Col","Accordion","Button","Card","PositionChart","Summary","CurrentAlgos","config","Dashboard","summary","setSummary","npvX","setNpvX","npvY","setNpvY","fetchData","data","console","log","apiGateway","URL","fetch","method","body","JSON","stringify","headers","then","response","json","Object","keys","npvchart","values","catch","error"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Positions from './Positions'\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\nimport PositionChart from './PositionChart'\nimport Summary from './Summary'\nimport CurrentAlgos from './CurrentAlgos'\nimport config from '../config';\n\nfunction Dashboard() {\n  const [summary,setSummary] = useState([]);\n  const [npvX,setNpvX] = useState([]);\n  const [npvY,setNpvY] = useState([]);\n\n  useEffect(()=>{\n    fetchData()\n  },[]);\n\n  const fetchData = async() => {\n    const data = {\"user\":\"geo\"}\n    console.log(config.apiGateway.URL)\n    fetch(config.apiGateway.URL+\"/getsummary\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      .then(response=>response.json())\n      .then(data=>{\n        console.log(\"API BEING USED IS:\")\n        console.log(config.apiGateway.URL)\n        setSummary(data)\n        setNpvX(Object.keys(data.npvchart))\n        setNpvY(Object.values(data.npvchart))\n      })\n      .catch(error=>console.log(error));\n    }\n  \n  return (\n    \n    <Container>\n      <br></br>\n      <br></br>\n      <Row>\n        <Col><Summary summary={summary}/></Col>\n        <Col><PositionChart x={npvX} y={npvY}/></Col>\n        \n      </Row>\n      <br></br>\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            \n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Algos\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body><CurrentAlgos summary={summary}/></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Current Positions\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body><Positions /></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              Trade History\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body><Positions /></Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}