{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgoPNLChart.js\";\nimport React, { useEffect, useState } from 'react'; //import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    setOptions({\n      chart: {\n        id: \"basic-line\",\n        type: \"area\"\n      },\n      xaxis: {\n        type: \"datetime\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"straight\"\n      }\n    });\n    setSeries([{\n      name: \"PNL\",\n      data: props.chart\n    }]);\n  }, [props.x, props.y]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mixed-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))));\n}\n\nexport default AlgoPNLChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgoPNLChart.js"],"names":["React","useEffect","useState","Chart","AlgoPNLChart","props","options","setOptions","series","setSeries","chart","id","type","xaxis","dataLabels","enabled","stroke","curve","name","data","x","y"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,oBAEGH,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEnBI,OAFmB;AAAA,QAEXC,UAFW;;AAAA,qBAGCL,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGnBM,MAHmB;AAAA,QAGZC,SAHY;;AAK1BR,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,UAAU,CAAC;AACPG,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAE,YADC;AAELC,QAAAA,IAAI,EAAE;AAFD,OADA;AAKPC,MAAAA,KAAK,EAAC;AACJD,QAAAA,IAAI,EAAE;AADF,OALC;AAQPE,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OARL;AAWPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AADD;AAXD,KAAD,CAAV;AAgBER,IAAAA,SAAS,CAAC,CACR;AACES,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,IAAI,EAAEd,KAAK,CAACK;AAFd,KADQ,CAAD,CAAT;AAKH,GAtBQ,EAsBP,CAACL,KAAK,CAACe,CAAP,EAASf,KAAK,CAACgB,CAAf,CAtBO,CAAT;AA0BE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEf,OADX;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD;;AAGH,eAAeJ,YAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\n//import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\n\nfunction AlgoPNLChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    setOptions({\n        chart: {\n          id: \"basic-line\",\n          type: \"area\"\n        },\n        xaxis:{\n          type: \"datetime\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: \"straight\"\n        }\n\n      })\n      setSeries([\n        {\n          name: \"PNL\",\n          data: props.chart\n        }])\n  },[props.x,props.y]);\n\n\n  \n    return (\n      <div className=\"app\">\n        <div >\n          <div className=\"mixed-chart\">\n            <Chart\n              options={options}\n              series={series}\n              type=\"line\"\n              width=\"100%\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default AlgoPNLChart;\n"]},"metadata":{},"sourceType":"module"}