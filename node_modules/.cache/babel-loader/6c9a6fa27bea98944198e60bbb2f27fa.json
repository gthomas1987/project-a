{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/AlgosChart.js\";\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport config from '../config';\n\nclass AlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => this.setState({\n      show: false\n    });\n\n    this.handleShow = () => this.setState({\n      show: true\n    });\n\n    this.state = {\n      accounttype: props.accounttype,\n      show: false,\n      seriesTop: [{\n        data: []\n      }],\n      optionsTop: {\n        chart: {\n          type: 'bar'\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      seriesBottom: [{\n        data: []\n      }],\n      optionsBottom: {\n        chart: {\n          type: 'bar'\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: []\n        }\n      }\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n  }\n\n  async runQuery() {\n    const data = {\n      \"accounttype\": this.state.accounttype\n    };\n    await fetch(config.apiGateway.URL + \"/getalgoperformance\", {\n      method: 'POST',\n      // or 'PUT'\n      body: JSON.stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Fetching top algos API\");\n      console.log(data);\n      this.setState({\n        show: true,\n        seriesTop: [{\n          data: Object.values(data.topalgos)\n        }],\n        optionsTop: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar'\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos)\n          }\n        },\n        seriesBottom: [{\n          data: Object.values(data.bottomalgos)\n        }],\n        optionsBottom: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar'\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.bottomalgos)\n          }\n        }\n      });\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.runQuery();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.show ? React.createElement(React.Fragment, null, React.createElement(ReactApexChart, {\n      options: this.state.optionsTop,\n      series: this.state.seriesTop,\n      type: \"bar\",\n      height: \"150%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(ReactApexChart, {\n      options: this.state.optionsBottom,\n      series: this.state.seriesBottom,\n      type: \"bar\",\n      height: \"150%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"info\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Loading...\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default AlgosChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/AlgosChart.js"],"names":["React","ReactApexChart","Container","Row","Col","Spinner","config","AlgosChart","Component","constructor","props","handleClose","setState","show","handleShow","state","accounttype","seriesTop","data","optionsTop","chart","type","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","categories","seriesBottom","optionsBottom","bind","runQuery","fetch","apiGateway","URL","method","body","JSON","stringify","headers","then","response","json","console","log","Object","values","topalgos","foreColor","keys","bottomalgos","catch","error","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport {Container,Row,Col,Spinner} from 'react-bootstrap';\nimport config from '../config';\n\nclass AlgosChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounttype:props.accounttype,\n      show:false,\n      seriesTop: [{\n        data: []\n      }],\n      optionsTop: {\n        chart: {\n          type: 'bar',\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: [],\n        }\n      },\n      seriesBottom: [{\n        data: []\n      }],\n      optionsBottom: {\n        chart: {\n          type: 'bar',\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: [],\n        }\n      },\n    \n      \n    };\n    this.handleClose = this.handleClose.bind(this)\n    this.handleShow = this.handleShow.bind(this)\n    this.runQuery = this.runQuery.bind(this)\n  }\n\n  handleClose = () => this.setState({show:false});\n  handleShow = () => this.setState({show:true});\n\n  async runQuery(){\n    const data = {\"accounttype\":this.state.accounttype}\n    await fetch(config.apiGateway.URL+\"/getalgoperformance\", {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n    })\n    .then(response=>response.json())\n    .then(data=>{\n      console.log(\"Fetching top algos API\")\n      console.log(data)\n      this.setState({\n        show:true,\n        seriesTop: [{\n          data: Object.values(data.topalgos)\n        }],\n        optionsTop: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar',\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.topalgos) ,\n          }\n        },\n        seriesBottom: [{\n          data: Object.values(data.bottomalgos)\n        }],\n        optionsBottom: {\n          chart: {\n            foreColor: '#ffffff',\n            type: 'bar',\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: Object.keys(data.bottomalgos) ,\n          }\n        },\n      \n        \n      })\n\n    })\n    .catch(error=>console.log(error));\n  }\n\n  componentDidMount(){\n    this.runQuery()\n  }\n\n  render() {\n    return (\n      \n      <div id=\"chart\">\n      {this.state.show\n        ?\n        <>\n        <ReactApexChart options={this.state.optionsTop} series={this.state.seriesTop} type=\"bar\" height=\"150%\" />\n        <ReactApexChart options={this.state.optionsBottom} series={this.state.seriesBottom} type=\"bar\" height=\"150%\" />\n        </>\n        :\n      <div>\n        <Container>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Row>\n        <Col></Col>\n        <Col md=\"auto\">\n          <Spinner animation=\"border\" variant =\"info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </Col>\n        <Col></Col>\n        </Row>\n        </Container>\n        </div>\n        }\n        </div>\n    );\n  }\n}\n\nexport default AlgosChart"]},"metadata":{},"sourceType":"module"}