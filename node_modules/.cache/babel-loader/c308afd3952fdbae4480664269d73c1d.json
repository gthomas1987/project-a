{"ast":null,"code":"import _regeneratorRuntime from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{HelpBlock,FormGroup,FormControl,ControlLabel,FormLabel,FormText,Container,Col,Row}from\"react-bootstrap\";import LoaderButton from\"../components/LoaderButton\";import{useFormFields}from\"../libs/hooksLib\";import{Auth}from'aws-amplify';export default function Signup(props){var _useFormFields=useFormFields({email:\"\",password:\"\",confirmPassword:\"\",confirmationCode:\"\"}),_useFormFields2=_slicedToArray(_useFormFields,2),fields=_useFormFields2[0],handleFieldChange=_useFormFields2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),newUser=_useState2[0],setNewUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];function validateForm(){return fields.email.length>0&&fields.password.length>0&&fields.password===fields.confirmPassword;}function validateConfirmationForm(){return fields.confirmationCode.length>0;}function handleSubmit(event){var _newUser;return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setIsLoading(true);_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(Auth.signUp({username:fields.email,password:fields.password}));case 5:_newUser=_context.sent;setIsLoading(false);setNewUser(_newUser);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);alert(_context.t0.message);setIsLoading(false);case 14:case\"end\":return _context.stop();}}},null,null,[[2,10]]);}function handleConfirmationSubmit(event){return _regeneratorRuntime.async(function handleConfirmationSubmit$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setIsLoading(true);_context2.prev=2;_context2.next=5;return _regeneratorRuntime.awrap(Auth.confirmSignUp(fields.email,fields.confirmationCode));case 5:_context2.next=7;return _regeneratorRuntime.awrap(Auth.signIn(fields.email,fields.password));case 7:props.userHasAuthenticated(true);props.history.push(\"/\");_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](2);alert(_context2.t0.message);setIsLoading(false);case 15:case\"end\":return _context2.stop();}}},null,null,[[2,11]]);}function renderConfirmationForm(){return React.createElement(\"form\",{onSubmit:handleConfirmationSubmit},React.createElement(FormGroup,{controlId:\"confirmationCode\",bsSize:\"large\"},React.createElement(FormLabel,null,\"Confirmation Code\"),React.createElement(FormControl,{autoFocus:true,type:\"tel\",onChange:handleFieldChange,value:fields.confirmationCode}),React.createElement(FormText,null,\"Please check your email for the code.\")),React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:isLoading,disabled:!validateConfirmationForm()},\"Verify\"));}function renderForm(){return React.createElement(Container,null,React.createElement(Row,null,React.createElement(Col,null),React.createElement(Col,null,React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(FormGroup,{controlId:\"email\",bsSize:\"large\"},React.createElement(FormLabel,null,\"Email\"),React.createElement(FormControl,{autoFocus:true,type:\"email\",value:fields.email,onChange:handleFieldChange})),React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},React.createElement(FormLabel,null,\"Password\"),React.createElement(FormControl,{type:\"password\",value:fields.password,onChange:handleFieldChange})),React.createElement(FormGroup,{controlId:\"confirmPassword\",bsSize:\"large\"},React.createElement(FormLabel,null,\"Confirm Password\"),React.createElement(FormControl,{type:\"password\",onChange:handleFieldChange,value:fields.confirmPassword})),React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:isLoading,disabled:!validateForm()},\"Signup\"))),React.createElement(Col,null)));}return React.createElement(\"div\",{className:\"Signup\"},newUser===null?renderForm():renderConfirmationForm());}","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Signup.js"],"names":["React","useState","HelpBlock","FormGroup","FormControl","ControlLabel","FormLabel","FormText","Container","Col","Row","LoaderButton","useFormFields","Auth","Signup","props","email","password","confirmPassword","confirmationCode","fields","handleFieldChange","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","validateConfirmationForm","handleSubmit","event","preventDefault","signUp","username","alert","message","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","history","push","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  FormLabel,\n  FormText,\n  Container,\n  Col,\n  Row\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport {Auth} from 'aws-amplify';\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <FormLabel>Confirmation Code</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <FormText>Please check your email for the code.</FormText >\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n        <Container>\n            <Row>\n                <Col></Col>\n                <Col>\n                    <form onSubmit={handleSubmit}>\n                        <FormGroup controlId=\"email\" bsSize=\"large\">\n                        <FormLabel>Email</FormLabel>\n                        <FormControl\n                            autoFocus\n                            type=\"email\"\n                            value={fields.email}\n                            onChange={handleFieldChange}\n                        />\n                        </FormGroup>\n                        <FormGroup controlId=\"password\" bsSize=\"large\">\n                        <FormLabel>Password</FormLabel>\n                        <FormControl\n                            type=\"password\"\n                            value={fields.password}\n                            onChange={handleFieldChange}\n                        />\n                        </FormGroup>\n                        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n                        <FormLabel>Confirm Password</FormLabel>\n                        <FormControl\n                            type=\"password\"\n                            onChange={handleFieldChange}\n                            value={fields.confirmPassword}\n                        />\n                        </FormGroup>\n                        <LoaderButton\n                        block\n                        type=\"submit\"\n                        bsSize=\"large\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                        >\n                        Signup\n                        </LoaderButton>\n                    </form>\n            </Col>\n            <Col></Col>\n            </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}