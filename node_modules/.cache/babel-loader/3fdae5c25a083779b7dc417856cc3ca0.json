{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Accordion, Button, Card } from 'react-bootstrap';\nimport Summary from './Summary';\nimport CurrentAlgos from './CurrentAlgos';\nimport AllAlgos from './AllAlgos';\nimport { Auth } from \"aws-amplify\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userid: \"\"\n    };\n  }\n\n  componentWillMount() {\n    async function onLoad() {\n      await Auth.currentAuthenticatedUser({\n        bypassCache: false // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n\n      }).then(user => {\n        console.log(user);\n        this.setState({\n          userid: user.username\n        });\n        console.log(\"ZZZZZ\");\n        console.log(this.state.userid);\n      }).catch(err => console.log(err));\n    }\n\n    onLoad();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Summary, {\n      userid: this.state.userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Algos\")), React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AllAlgos, {\n      userid: this.state.userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CurrentAlgos, {\n      userid: this.state.userid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/Dashboard.js"],"names":["React","useState","useEffect","Container","Row","Col","Accordion","Button","Card","Summary","CurrentAlgos","AllAlgos","Auth","Dashboard","Component","constructor","props","state","userid","componentWillMount","onLoad","currentAuthenticatedUser","bypassCache","then","user","console","log","setState","username","catch","err","render"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Container,Row,Col,Accordion, Button, Card} from 'react-bootstrap';\nimport Summary from './Summary'\nimport CurrentAlgos from './CurrentAlgos'\nimport AllAlgos from './AllAlgos'\n\nimport { Auth } from \"aws-amplify\";\n\nclass Dashboard extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      userid:\"\"\n    }\n  }\n\n  componentWillMount(){\n    async function onLoad(){\n      await Auth.currentAuthenticatedUser({\n        bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\n      })\n      .then(user => {\n        console.log(user)\n        this.setState({userid:user.username})\n        console.log(\"ZZZZZ\")\n        console.log(this.state.userid)\n        }\n      )\n      .catch(err => console.log(err));\n    }\n    onLoad();\n  }\n\n  \n\n  \n  \n  render(){\n    return (\n    \n      <Container>\n        <br></br>\n        <br></br>\n        <Row>\n          <Col><Summary userid={this.state.userid} /></Col>\n          \n          \n        </Row>\n        <br></br>\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Card.Header>\n              <Row>\n              <Col sm={10}>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                Algos\n              </Accordion.Toggle>\n              </Col>\n              <Col sm={2}>\n              <AllAlgos  userid={this.state.userid} />\n              </Col>\n              </Row>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body><CurrentAlgos userid={this.state.userid} /></Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Container>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}