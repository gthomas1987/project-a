{"ast":null,"code":"import _slicedToArray from \"/Users/george/Documents/George/project-a/project-a/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/george/Documents/George/project-a/project-a/src/components/NPVChart.js\";\nimport React, { useEffect, useState } from 'react'; //import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\nimport { Alert } from 'react-bootstrap';\n\nfunction NPVChart(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        series = _useState4[0],\n        setSeries = _useState4[1];\n\n  useEffect(() => {\n    setOptions({\n      dataLabels: {\n        enabled: false\n      },\n      chart: {\n        foreColor: '#ffffff',\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        }\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            const formattedDate = new Date(timestamp).toDateString();\n\n            const _formattedDate$split = formattedDate.split(' '),\n                  _formattedDate$split2 = _slicedToArray(_formattedDate$split, 4),\n                  month = _formattedDate$split2[1],\n                  day = _formattedDate$split2[2],\n                  year = _formattedDate$split2[3];\n\n            return [day, month, year].join('-');\n          }\n        }\n      }\n    });\n    setSeries([{\n      name: \"PNL\",\n      data: props.npvChart\n    }]);\n  }, [props.npvChart]);\n  return React.createElement(\"div\", {\n    id: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"NPV Chart\"), React.createElement(Chart, {\n    options: options,\n    series: series,\n    type: \"line\",\n    width: \"400\",\n    height: \"340\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}\n\nexport default NPVChart;","map":{"version":3,"sources":["/Users/george/Documents/George/project-a/project-a/src/components/NPVChart.js"],"names":["React","useEffect","useState","Chart","Alert","NPVChart","props","options","setOptions","series","setSeries","dataLabels","enabled","chart","foreColor","zoom","type","autoScaleYaxis","zoomedArea","fill","color","opacity","stroke","width","xaxis","labels","formatter","value","timestamp","formattedDate","Date","toDateString","split","month","day","year","join","name","data","npvChart"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA,oBAEOJ,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEfK,OAFe;AAAA,QAEPC,UAFO;;AAAA,qBAGKN,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,QAGfO,MAHe;AAAA,QAGRC,SAHQ;;AAKtBT,EAAAA,SAAS,CAAC,MAAI;AAGZO,IAAAA,UAAU,CAAC;AAETG,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OAFH;AAKTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,SADN;AAELC,QAAAA,IAAI,EAAE;AACFH,UAAAA,OAAO,EAAE,IADP;AAEFI,UAAAA,IAAI,EAAE,GAFJ;AAGFC,UAAAA,cAAc,EAAE,KAHd;AAIFC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AACJC,cAAAA,KAAK,EAAE,SADH;AAEJC,cAAAA,OAAO,EAAE;AAFL,aADI;AAKVC,YAAAA,MAAM,EAAE;AACNF,cAAAA,KAAK,EAAE,SADD;AAENC,cAAAA,OAAO,EAAE,GAFH;AAGNE,cAAAA,KAAK,EAAE;AAHD;AALE;AAJV;AAFD,OALE;AAwBTC,MAAAA,KAAK,EAAC;AACJR,QAAAA,IAAI,EAAE,UADF;AAEJS,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;AACrC,kBAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,SAAT,EAAoBG,YAApB,EAAtB;;AADqC,yCAERF,aAAa,CAACG,KAAd,CAAoB,GAApB,CAFQ;AAAA;AAAA,kBAE5BC,KAF4B;AAAA,kBAErBC,GAFqB;AAAA,kBAEhBC,IAFgB;;AAGrC,mBAAO,CAACD,GAAD,EAAMD,KAAN,EAAaE,IAAb,EAAmBC,IAAnB,CAAwB,GAAxB,CAAP;AACD;AALK;AAFJ;AAxBG,KAAD,CAAV;AAmCA1B,IAAAA,SAAS,CAAC,CACR;AACE2B,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,IAAI,EAAEhC,KAAK,CAACiC;AAFd,KADQ,CAAD,CAAT;AAMD,GA5CQ,EA4CP,CAACjC,KAAK,CAACiC,QAAP,CA5CO,CAAT;AAkDE,SACM;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEhC,OADX;AAEE,IAAA,MAAM,EAAEE,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,KAJR;AAKE,IAAA,MAAM,EAAC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADN;AAYD;;AAGH,eAAeJ,QAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\n//import ApexCharts from 'apexcharts'\n\nimport Chart from \"react-apexcharts\";\nimport {Alert} from 'react-bootstrap'\nfunction NPVChart(props){\n\n  const [options,setOptions] = useState({});\n  const [series,setSeries] = useState([]);\n\n  useEffect(()=>{\n    \n    \n    setOptions({\n      \n      dataLabels: {\n        enabled: false\n      },      \n      chart: {\n        foreColor: '#ffffff',\n        zoom: {\n            enabled: true,\n            type: 'x',  \n            autoScaleYaxis: false,  \n            zoomedArea: {\n              fill: {\n                color: '#90CAF9',\n                opacity: 0.4\n              },\n              stroke: {\n                color: '#0D47A1',\n                opacity: 0.4,\n                width: 1\n              }\n            }\n        }\n      },\n      xaxis:{\n        type: 'datetime',\n        labels: {\n          formatter: function (value, timestamp) {\n            const formattedDate = new Date(timestamp).toDateString()\n            const [, month, day, year] = formattedDate.split(' ')\n            return [day, month, year].join('-')\n          }, \n        }\n      }\n      })\n    setSeries([\n      {\n        name: \"PNL\",\n        data: props.npvChart\n      }\n    ])\n  },[props.npvChart]);\n\n\n\n\n  \n    return (\n          <div  id=\"chart\">\n            <Alert variant=\"dark\">NPV Chart</Alert>\n            <Chart\n              options={options}\n              series={series}\n              type=\"line\"\n              width=\"400\"\n              height=\"340\"\n            />\n          </div>\n    );\n  }\n\n\nexport default NPVChart;\n"]},"metadata":{},"sourceType":"module"}